{
  "master_content": [
    {
      "object": "block",
      "type": "heading_1",
      "heading_1": {
        "rich_text": [
          {
            "text": {
              "content": "\ud83e\udde0 BrainOps AI OS Master Documentation"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "callout",
      "callout": {
        "rich_text": [
          {
            "text": {
              "content": "System Version: v30.3.0\nLast Updated: 2025-09-14 19:30:30\nStatus: 73.9% Operational"
            }
          }
        ],
        "icon": {
          "emoji": "\ud83d\ude80"
        }
      }
    },
    {
      "object": "block",
      "type": "divider",
      "divider": {}
    },
    {
      "object": "block",
      "type": "heading_2",
      "heading_2": {
        "rich_text": [
          {
            "text": {
              "content": "\ud83d\udcdd Standard Operating Procedures"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "heading_2",
      "heading_2": {
        "rich_text": [
          {
            "text": {
              "content": "Deployment SOPs"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "1. Always test locally before deployment"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "2. Build Docker image with version tag"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "3. Push to Docker Hub with both version and latest tags"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "4. Trigger Render deployment"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "5. Monitor health endpoint for version confirmation"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "6. Run live API tests"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "divider",
      "divider": {}
    },
    {
      "object": "block",
      "type": "heading_2",
      "heading_2": {
        "rich_text": [
          {
            "text": {
              "content": "Database SOPs"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "1. Always backup before schema changes"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "2. Use migrations for all schema updates"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "3. Test migrations on staging first"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "4. Document all table relationships"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "5. Maintain referential integrity"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "6. Use connection pooling for production"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "divider",
      "divider": {}
    },
    {
      "object": "block",
      "type": "heading_2",
      "heading_2": {
        "rich_text": [
          {
            "text": {
              "content": "Code Development SOPs"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "1. Follow existing code patterns"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "2. Always use type hints in Python"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "3. Test all endpoints before deployment"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "4. Document all API changes"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "5. Use atomic commits"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "6. Update version numbers consistently"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "divider",
      "divider": {}
    },
    {
      "object": "block",
      "type": "heading_2",
      "heading_2": {
        "rich_text": [
          {
            "text": {
              "content": "Security SOPs"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "1. Never commit credentials to git"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "2. Use environment variables for secrets"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "3. Rotate API keys regularly"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "4. Implement rate limiting"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "5. Log all authentication attempts"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "6. Use HTTPS for all external APIs"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "divider",
      "divider": {}
    },
    {
      "object": "block",
      "type": "heading_2",
      "heading_2": {
        "rich_text": [
          {
            "text": {
              "content": "AI Integration SOPs"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "1. Always provide fallback for AI failures"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "2. Log all AI API calls"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "3. Monitor token usage"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "4. Implement retry logic with backoff"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "5. Cache AI responses when appropriate"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "6. Use appropriate models for tasks"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "divider",
      "divider": {}
    },
    {
      "object": "block",
      "type": "heading_2",
      "heading_2": {
        "rich_text": [
          {
            "text": {
              "content": "Task Management SOPs"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "1. Always use TodoWrite tool for task tracking"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "2. Update task status in real-time"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "3. Only one task in_progress at a time"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "4. Document blockers immediately"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "5. Complete tasks before starting new ones"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "6. Sync with Notion task manager"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "divider",
      "divider": {}
    },
    {
      "object": "block",
      "type": "heading_2",
      "heading_2": {
        "rich_text": [
          {
            "text": {
              "content": "\ud83d\udd27 Environment Variables"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "toggle",
      "toggle": {
        "rich_text": [
          {
            "text": {
              "content": "\u2705 DATABASE_URL (Database)"
            }
          }
        ],
        "children": [
          {
            "object": "block",
            "type": "paragraph",
            "paragraph": {
              "rich_text": [
                {
                  "text": {
                    "content": "Value: postgresql://postgres.yomagoqdmxszqtdwuhab:***@aws-0-us-east-2.pooler.supabase.com:5432/postgres\nStatus: Set\nNotes: Supabase PostgreSQL connection"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "toggle",
      "toggle": {
        "rich_text": [
          {
            "text": {
              "content": "\u2705 JWT_SECRET_KEY (Security)"
            }
          }
        ],
        "children": [
          {
            "object": "block",
            "type": "paragraph",
            "paragraph": {
              "rich_text": [
                {
                  "text": {
                    "content": "Value: ***\nStatus: Set\nNotes: JWT token signing key"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "toggle",
      "toggle": {
        "rich_text": [
          {
            "text": {
              "content": "\u2705 STRIPE_SECRET_KEY (Payment)"
            }
          }
        ],
        "children": [
          {
            "object": "block",
            "type": "paragraph",
            "paragraph": {
              "rich_text": [
                {
                  "text": {
                    "content": "Value: rk_live_***\nStatus: Set\nNotes: Live Stripe API key"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "toggle",
      "toggle": {
        "rich_text": [
          {
            "text": {
              "content": "\u2705 DOCKER_PAT (Deployment)"
            }
          }
        ],
        "children": [
          {
            "object": "block",
            "type": "paragraph",
            "paragraph": {
              "rich_text": [
                {
                  "text": {
                    "content": "Value: dckr_pat_***\nStatus: Set\nNotes: Docker Hub access token"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "toggle",
      "toggle": {
        "rich_text": [
          {
            "text": {
              "content": "\u2705 RENDER_API_KEY (Deployment)"
            }
          }
        ],
        "children": [
          {
            "object": "block",
            "type": "paragraph",
            "paragraph": {
              "rich_text": [
                {
                  "text": {
                    "content": "Value: rnd_***\nStatus: Set\nNotes: Render deployment API"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "toggle",
      "toggle": {
        "rich_text": [
          {
            "text": {
              "content": "\u2705 NOTION_TOKEN (Integration)"
            }
          }
        ],
        "children": [
          {
            "object": "block",
            "type": "paragraph",
            "paragraph": {
              "rich_text": [
                {
                  "text": {
                    "content": "Value: ntn_***\nStatus: Set\nNotes: Notion API integration"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "toggle",
      "toggle": {
        "rich_text": [
          {
            "text": {
              "content": "\u274c OPENAI_API_KEY (AI)"
            }
          }
        ],
        "children": [
          {
            "object": "block",
            "type": "paragraph",
            "paragraph": {
              "rich_text": [
                {
                  "text": {
                    "content": "Value: \nStatus: Required\nNotes: OpenAI GPT-4 access"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "toggle",
      "toggle": {
        "rich_text": [
          {
            "text": {
              "content": "\u274c ANTHROPIC_API_KEY (AI)"
            }
          }
        ],
        "children": [
          {
            "object": "block",
            "type": "paragraph",
            "paragraph": {
              "rich_text": [
                {
                  "text": {
                    "content": "Value: \nStatus: Required\nNotes: Claude API access"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "toggle",
      "toggle": {
        "rich_text": [
          {
            "text": {
              "content": "\u274c SENDGRID_API_KEY (Email)"
            }
          }
        ],
        "children": [
          {
            "object": "block",
            "type": "paragraph",
            "paragraph": {
              "rich_text": [
                {
                  "text": {
                    "content": "Value: \nStatus: Required\nNotes: Email automation"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "heading_2",
      "heading_2": {
        "rich_text": [
          {
            "text": {
              "content": "\ud83d\udcad Master Prompt Database"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "toggle",
      "toggle": {
        "rich_text": [
          {
            "text": {
              "content": "System Initialization (System)"
            }
          }
        ],
        "children": [
          {
            "object": "block",
            "type": "paragraph",
            "paragraph": {
              "rich_text": [
                {
                  "text": {
                    "content": "Usage: Initial system setup\n\nPrompt:\nYou are Claude Code, an AI assistant specialized in software development. Always use available tools, track tasks with TodoWrite, and maintain context in CLAUDE.md files."
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "toggle",
      "toggle": {
        "rich_text": [
          {
            "text": {
              "content": "Code Review (Development)"
            }
          }
        ],
        "children": [
          {
            "object": "block",
            "type": "paragraph",
            "paragraph": {
              "rich_text": [
                {
                  "text": {
                    "content": "Usage: Code quality checks\n\nPrompt:\nReview this code for: 1) Security vulnerabilities, 2) Performance issues, 3) Best practices, 4) Type safety, 5) Error handling. Provide specific improvement suggestions."
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "toggle",
      "toggle": {
        "rich_text": [
          {
            "text": {
              "content": "Database Query Optimization (Database)"
            }
          }
        ],
        "children": [
          {
            "object": "block",
            "type": "paragraph",
            "paragraph": {
              "rich_text": [
                {
                  "text": {
                    "content": "Usage: Query optimization\n\nPrompt:\nAnalyze this query for performance. Consider: indexes, joins, subqueries, connection pooling. Provide optimized version with explanation."
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "toggle",
      "toggle": {
        "rich_text": [
          {
            "text": {
              "content": "API Endpoint Creation (API)"
            }
          }
        ],
        "children": [
          {
            "object": "block",
            "type": "paragraph",
            "paragraph": {
              "rich_text": [
                {
                  "text": {
                    "content": "Usage: Endpoint development\n\nPrompt:\nCreate a FastAPI endpoint with: proper validation, error handling, documentation, type hints, and test cases. Follow RESTful conventions."
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "toggle",
      "toggle": {
        "rich_text": [
          {
            "text": {
              "content": "Deployment Preparation (DevOps)"
            }
          }
        ],
        "children": [
          {
            "object": "block",
            "type": "paragraph",
            "paragraph": {
              "rich_text": [
                {
                  "text": {
                    "content": "Usage: Deployment workflow\n\nPrompt:\nPrepare for deployment: 1) Run tests, 2) Update version, 3) Build Docker image, 4) Push to registry, 5) Update documentation, 6) Monitor health."
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "toggle",
      "toggle": {
        "rich_text": [
          {
            "text": {
              "content": "Error Diagnosis (Debugging)"
            }
          }
        ],
        "children": [
          {
            "object": "block",
            "type": "paragraph",
            "paragraph": {
              "rich_text": [
                {
                  "text": {
                    "content": "Usage: Error resolution\n\nPrompt:\nDiagnose this error: 1) Identify root cause, 2) Check related systems, 3) Review recent changes, 4) Propose fixes, 5) Implement solution, 6) Add preventive measures."
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "heading_2",
      "heading_2": {
        "rich_text": [
          {
            "text": {
              "content": "\ud83c\udfd7\ufe0f System Architecture"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "heading_3",
      "heading_3": {
        "rich_text": [
          {
            "text": {
              "content": "System Overview"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "Backend: FastAPI v30.3.0 - Python 3.11"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "Database: PostgreSQL via Supabase (481 tables)"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "Frontend: Next.js (MyRoofGenius, WeatherCraft)"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "Deployment: Docker \u2192 Docker Hub \u2192 Render"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "AI Services: Claude, GPT-4, Gemini"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "Monitoring: Health endpoints, Papertrail logs"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "heading_3",
      "heading_3": {
        "rich_text": [
          {
            "text": {
              "content": "Core Components"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "API Layer:",
              "annotations": {
                "bold": true
              }
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "/api/v1/health - System health check"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "/api/v1/auth/* - Authentication endpoints"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "/api/v1/crm/* - Customer management"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "/api/v1/jobs/* - Job tracking"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "/api/v1/invoices/* - Billing system"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "/api/v1/ai/* - AI services"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "/api/v1/webhooks/* - External integrations"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "Database Schema:",
              "annotations": {
                "bold": true
              }
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "customers (3,587 records)"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "jobs (12,820 records)"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "invoices (2,004 records)"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "ai_agents (34 agents)"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "users, estimates, inventory, etc."
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "AI Agents:",
              "annotations": {
                "bold": true
              }
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "Lead scoring agent"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "Content generation agent"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "Data analysis agent"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "Customer service agent"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "Automation orchestrator"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "heading_3",
      "heading_3": {
        "rich_text": [
          {
            "text": {
              "content": "Infrastructure"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "Production URLs:",
              "annotations": {
                "bold": true
              }
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "https://brainops-backend-prod.onrender.com"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "https://myroofgenius.com"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "bulleted_list_item",
      "bulleted_list_item": {
        "rich_text": [
          {
            "text": {
              "content": "https://weathercraft-erp.vercel.app"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "Docker Registry: mwwoodworth/brainops-backend"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "Database Host: db.yomagoqdmxszqtdwuhab.supabase.co"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "Connection Pool: aws-0-us-east-2.pooler.supabase.com"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "heading_3",
      "heading_3": {
        "rich_text": [
          {
            "text": {
              "content": "Development Workflow"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "Local Development: python3 -m uvicorn main:app"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "Testing: pytest + live API tests"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "Version Control: Git \u2192 GitHub"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "CI/CD: Git push \u2192 Docker build \u2192 Render deploy"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "Monitoring: Health checks every 5 minutes"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "heading_3",
      "heading_3": {
        "rich_text": [
          {
            "text": {
              "content": "Security"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "Authentication: JWT tokens"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "API Keys: Environment variables"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "Database: SSL connections"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "Passwords: Bcrypt hashing"
            }
          }
        ]
      }
    },
    {
      "object": "block",
      "type": "paragraph",
      "paragraph": {
        "rich_text": [
          {
            "text": {
              "content": "Rate Limiting: Per-endpoint limits"
            }
          }
        ]
      }
    }
  ],
  "task_database_properties": {
    "Task": {
      "title": {}
    },
    "Status": {
      "select": {
        "options": [
          {
            "name": "\ud83d\udd34 Blocked",
            "color": "red"
          },
          {
            "name": "\u23f8\ufe0f Pending",
            "color": "gray"
          },
          {
            "name": "\ud83d\udd04 In Progress",
            "color": "yellow"
          },
          {
            "name": "\u2705 Completed",
            "color": "green"
          }
        ]
      }
    },
    "Priority": {
      "select": {
        "options": [
          {
            "name": "\ud83d\udd25 Critical",
            "color": "red"
          },
          {
            "name": "\u26a0\ufe0f High",
            "color": "orange"
          },
          {
            "name": "\ud83d\udccc Medium",
            "color": "yellow"
          },
          {
            "name": "\ud83d\udcce Low",
            "color": "gray"
          }
        ]
      }
    },
    "Assigned To": {
      "select": {
        "options": [
          {
            "name": "AI Agent",
            "color": "blue"
          },
          {
            "name": "Human",
            "color": "green"
          },
          {
            "name": "Both",
            "color": "purple"
          }
        ]
      }
    },
    "Created": {
      "created_time": {}
    },
    "Updated": {
      "last_edited_time": {}
    },
    "Due Date": {
      "date": {}
    },
    "Notes": {
      "rich_text": {}
    },
    "Dependencies": {
      "rich_text": {}
    },
    "Completion %": {
      "number": {
        "format": "percent"
      }
    }
  },
  "environment_variables": {
    "DATABASE_URL": {
      "value": "postgresql://postgres.yomagoqdmxszqtdwuhab:***@aws-0-us-east-2.pooler.supabase.com:5432/postgres",
      "status": "Set",
      "category": "Database",
      "notes": "Supabase PostgreSQL connection"
    },
    "JWT_SECRET_KEY": {
      "value": "***",
      "status": "Set",
      "category": "Security",
      "notes": "JWT token signing key"
    },
    "STRIPE_SECRET_KEY": {
      "value": "rk_live_***",
      "status": "Set",
      "category": "Payment",
      "notes": "Live Stripe API key"
    },
    "DOCKER_PAT": {
      "value": "dckr_pat_***",
      "status": "Set",
      "category": "Deployment",
      "notes": "Docker Hub access token"
    },
    "RENDER_API_KEY": {
      "value": "rnd_***",
      "status": "Set",
      "category": "Deployment",
      "notes": "Render deployment API"
    },
    "NOTION_TOKEN": {
      "value": "ntn_***",
      "status": "Set",
      "category": "Integration",
      "notes": "Notion API integration"
    },
    "OPENAI_API_KEY": {
      "value": "",
      "status": "Required",
      "category": "AI",
      "notes": "OpenAI GPT-4 access"
    },
    "ANTHROPIC_API_KEY": {
      "value": "",
      "status": "Required",
      "category": "AI",
      "notes": "Claude API access"
    },
    "SENDGRID_API_KEY": {
      "value": "",
      "status": "Required",
      "category": "Email",
      "notes": "Email automation"
    }
  },
  "prompts": {
    "System Initialization": {
      "prompt": "You are Claude Code, an AI assistant specialized in software development. Always use available tools, track tasks with TodoWrite, and maintain context in CLAUDE.md files.",
      "category": "System",
      "usage": "Initial system setup"
    },
    "Code Review": {
      "prompt": "Review this code for: 1) Security vulnerabilities, 2) Performance issues, 3) Best practices, 4) Type safety, 5) Error handling. Provide specific improvement suggestions.",
      "category": "Development",
      "usage": "Code quality checks"
    },
    "Database Query Optimization": {
      "prompt": "Analyze this query for performance. Consider: indexes, joins, subqueries, connection pooling. Provide optimized version with explanation.",
      "category": "Database",
      "usage": "Query optimization"
    },
    "API Endpoint Creation": {
      "prompt": "Create a FastAPI endpoint with: proper validation, error handling, documentation, type hints, and test cases. Follow RESTful conventions.",
      "category": "API",
      "usage": "Endpoint development"
    },
    "Deployment Preparation": {
      "prompt": "Prepare for deployment: 1) Run tests, 2) Update version, 3) Build Docker image, 4) Push to registry, 5) Update documentation, 6) Monitor health.",
      "category": "DevOps",
      "usage": "Deployment workflow"
    },
    "Error Diagnosis": {
      "prompt": "Diagnose this error: 1) Identify root cause, 2) Check related systems, 3) Review recent changes, 4) Propose fixes, 5) Implement solution, 6) Add preventive measures.",
      "category": "Debugging",
      "usage": "Error resolution"
    }
  },
  "architecture": {
    "System Overview": {
      "Backend": "FastAPI v30.3.0 - Python 3.11",
      "Database": "PostgreSQL via Supabase (481 tables)",
      "Frontend": "Next.js (MyRoofGenius, WeatherCraft)",
      "Deployment": "Docker \u2192 Docker Hub \u2192 Render",
      "AI Services": "Claude, GPT-4, Gemini",
      "Monitoring": "Health endpoints, Papertrail logs"
    },
    "Core Components": {
      "API Layer": [
        "/api/v1/health - System health check",
        "/api/v1/auth/* - Authentication endpoints",
        "/api/v1/crm/* - Customer management",
        "/api/v1/jobs/* - Job tracking",
        "/api/v1/invoices/* - Billing system",
        "/api/v1/ai/* - AI services",
        "/api/v1/webhooks/* - External integrations"
      ],
      "Database Schema": [
        "customers (3,587 records)",
        "jobs (12,820 records)",
        "invoices (2,004 records)",
        "ai_agents (34 agents)",
        "users, estimates, inventory, etc."
      ],
      "AI Agents": [
        "Lead scoring agent",
        "Content generation agent",
        "Data analysis agent",
        "Customer service agent",
        "Automation orchestrator"
      ]
    },
    "Infrastructure": {
      "Production URLs": [
        "https://brainops-backend-prod.onrender.com",
        "https://myroofgenius.com",
        "https://weathercraft-erp.vercel.app"
      ],
      "Docker Registry": "mwwoodworth/brainops-backend",
      "Database Host": "db.yomagoqdmxszqtdwuhab.supabase.co",
      "Connection Pool": "aws-0-us-east-2.pooler.supabase.com"
    },
    "Development Workflow": {
      "Local Development": "python3 -m uvicorn main:app",
      "Testing": "pytest + live API tests",
      "Version Control": "Git \u2192 GitHub",
      "CI/CD": "Git push \u2192 Docker build \u2192 Render deploy",
      "Monitoring": "Health checks every 5 minutes"
    },
    "Security": {
      "Authentication": "JWT tokens",
      "API Keys": "Environment variables",
      "Database": "SSL connections",
      "Passwords": "Bcrypt hashing",
      "Rate Limiting": "Per-endpoint limits"
    }
  },
  "created_at": "2025-09-14T19:30:30.894750"
}
-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.ab_test_results (
  id integer NOT NULL DEFAULT nextval('ab_test_results_id_seq'::regclass),
  test_name character varying NOT NULL,
  variant character varying NOT NULL,
  impressions integer DEFAULT 0,
  conversions integer DEFAULT 0,
  revenue numeric DEFAULT 0,
  conversion_rate numeric,
  status character varying DEFAULT 'active'::character varying,
  started_at timestamp with time zone DEFAULT now(),
  ended_at timestamp with time zone,
  winner character varying,
  meta_data jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT ab_test_results_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ab_tests (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  test_name character varying NOT NULL,
  variant character varying,
  customer_email character varying,
  converted boolean DEFAULT false,
  value_cents integer,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT ab_tests_pkey PRIMARY KEY (id)
);
CREATE TABLE public.activities (
  id uuid NOT NULL,
  entity_type character varying NOT NULL,
  entity_id uuid NOT NULL,
  type USER-DEFINED NOT NULL,
  title character varying NOT NULL,
  description text,
  metadata json,
  user_id uuid NOT NULL,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT activities_pkey PRIMARY KEY (id),
  CONSTRAINT activities_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.ad_campaigns (
  id integer NOT NULL DEFAULT nextval('ad_campaigns_id_seq'::regclass),
  campaign_id character varying UNIQUE,
  platform character varying,
  name character varying,
  budget_daily_cents integer,
  target_cpa_cents integer,
  keywords jsonb,
  locations jsonb,
  ad_schedule jsonb,
  status character varying,
  metadata jsonb,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT ad_campaigns_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ad_performance (
  id integer NOT NULL DEFAULT nextval('ad_performance_id_seq'::regclass),
  campaign_id character varying,
  date date,
  impressions integer DEFAULT 0,
  clicks integer DEFAULT 0,
  conversions integer DEFAULT 0,
  spend_cents integer DEFAULT 0,
  cpc_cents integer DEFAULT 0,
  conversion_rate numeric,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT ad_performance_pkey PRIMARY KEY (id)
);
CREATE TABLE public.admin_action_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  action_type character varying NOT NULL,
  action_status character varying NOT NULL DEFAULT 'pending'::character varying,
  user_id uuid,
  user_email character varying,
  user_ip character varying,
  user_agent text,
  api_key_id character varying,
  action_target character varying,
  action_details jsonb DEFAULT '{}'::jsonb,
  sql_executed text,
  result_summary text,
  result_details jsonb,
  error_message text,
  error_traceback text,
  started_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  completed_at timestamp with time zone,
  duration_ms integer,
  render_deploy_id character varying,
  vercel_deploy_id character varying,
  github_issue_number integer,
  github_pr_number integer,
  backup_location text,
  environment character varying DEFAULT 'production'::character varying,
  service_version character varying,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT admin_action_logs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.agent_capabilities (
  id integer NOT NULL DEFAULT nextval('agent_capabilities_id_seq'::regclass),
  agent_name text NOT NULL UNIQUE,
  agent_role text,
  capabilities jsonb NOT NULL DEFAULT '{}'::jsonb,
  model_name text,
  api_configured boolean DEFAULT false,
  total_executions integer DEFAULT 0,
  success_count integer DEFAULT 0,
  failure_count integer DEFAULT 0,
  average_response_time_ms double precision DEFAULT 0,
  last_execution_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT agent_capabilities_pkey PRIMARY KEY (id)
);
CREATE TABLE public.agent_configs (
  id integer NOT NULL DEFAULT nextval('agent_configs_id_seq'::regclass),
  name character varying NOT NULL UNIQUE,
  agent_type character varying NOT NULL,
  config jsonb DEFAULT '{}'::jsonb,
  settings jsonb DEFAULT '{}'::jsonb,
  meta_data jsonb DEFAULT '{}'::jsonb,
  capabilities jsonb DEFAULT '[]'::jsonb,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT agent_configs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.agent_execution_logs (
  id integer NOT NULL DEFAULT nextval('agent_execution_logs_id_seq'::regclass),
  agent_name text NOT NULL,
  agent_id text NOT NULL,
  task_id text NOT NULL,
  execution_phase text NOT NULL,
  phase_data jsonb DEFAULT '{}'::jsonb,
  timestamp timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  duration_ms double precision,
  memory_operations jsonb DEFAULT '[]'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT agent_execution_logs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.agent_executions (
  id uuid NOT NULL,
  task_execution_id uuid NOT NULL,
  agent_type character varying NOT NULL,
  prompt text NOT NULL,
  response text,
  model_name character varying,
  tokens_input integer,
  tokens_output integer,
  latency_ms integer,
  cost_cents integer,
  status character varying,
  error_message text,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  completed_at timestamp without time zone,
  CONSTRAINT agent_executions_pkey PRIMARY KEY (id),
  CONSTRAINT agent_executions_task_execution_id_fkey FOREIGN KEY (task_execution_id) REFERENCES public.task_executions(id)
);
CREATE TABLE public.agent_memories (
  memory_id character varying NOT NULL,
  agent_id character varying NOT NULL,
  memory_key character varying NOT NULL,
  content jsonb NOT NULL,
  memory_type character varying NOT NULL,
  priority integer DEFAULT 5,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  access_count integer DEFAULT 0,
  last_accessed timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT agent_memories_pkey PRIMARY KEY (memory_id)
);
CREATE TABLE public.agent_memory_access (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  agent_id character varying NOT NULL,
  memory_id uuid NOT NULL,
  access_type character varying NOT NULL,
  access_context jsonb,
  success boolean DEFAULT true,
  error_message text,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT agent_memory_access_pkey PRIMARY KEY (id)
);
CREATE TABLE public.agent_performance (
  id integer NOT NULL DEFAULT nextval('agent_performance_id_seq'::regclass),
  agent_id character varying NOT NULL,
  task_type character varying,
  success boolean NOT NULL,
  execution_time_seconds double precision,
  error_message text,
  memory_usage_kb integer,
  timestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT agent_performance_pkey PRIMARY KEY (id)
);
CREATE TABLE public.agent_registry (
  agent_id uuid NOT NULL DEFAULT gen_random_uuid(),
  agent_type character varying NOT NULL,
  agent_name character varying NOT NULL,
  configuration jsonb DEFAULT '{}'::jsonb,
  status character varying DEFAULT 'active'::character varying,
  capabilities jsonb DEFAULT '[]'::jsonb,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  last_active timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  domain character varying NOT NULL DEFAULT 'unassigned'::character varying,
  CONSTRAINT agent_registry_pkey PRIMARY KEY (agent_id)
);
CREATE TABLE public.agent_roles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  agent_name text NOT NULL UNIQUE,
  role_type text NOT NULL,
  capabilities jsonb NOT NULL DEFAULT '[]'::jsonb,
  permissions jsonb NOT NULL DEFAULT '{}'::jsonb,
  current_state text DEFAULT 'active'::text,
  last_action jsonb,
  success_rate numeric DEFAULT 100.0,
  total_actions integer DEFAULT 0,
  failed_actions integer DEFAULT 0,
  healing_rules jsonb DEFAULT '[]'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT agent_roles_pkey PRIMARY KEY (id)
);
CREATE TABLE public.agent_sessions (
  session_id uuid NOT NULL,
  agent text NOT NULL,
  memory jsonb DEFAULT '{}'::jsonb,
  context jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT agent_sessions_pkey PRIMARY KEY (session_id, agent)
);
CREATE TABLE public.ai_agent_connections (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  from_agent_id uuid NOT NULL,
  to_agent_id uuid NOT NULL,
  connection_type character varying NOT NULL,
  trust_level numeric DEFAULT 0.50 CHECK (trust_level >= 0::numeric AND trust_level <= 1::numeric),
  communication_protocol character varying DEFAULT 'async'::character varying,
  shared_memory_access boolean DEFAULT false,
  interaction_count integer DEFAULT 0,
  last_interaction timestamp with time zone,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT ai_agent_connections_pkey PRIMARY KEY (id),
  CONSTRAINT ai_agent_connections_from_agent_id_fkey FOREIGN KEY (from_agent_id) REFERENCES public.ai_agents(id),
  CONSTRAINT ai_agent_connections_to_agent_id_fkey FOREIGN KEY (to_agent_id) REFERENCES public.ai_agents(id)
);
CREATE TABLE public.ai_agent_metrics (
  id integer NOT NULL DEFAULT nextval('ai_agent_metrics_id_seq'::regclass),
  agent_id uuid,
  timestamp timestamp with time zone DEFAULT now(),
  execution_time_ms integer,
  success boolean,
  tokens_used integer,
  error_message text,
  metadata jsonb,
  CONSTRAINT ai_agent_metrics_pkey PRIMARY KEY (id),
  CONSTRAINT ai_agent_metrics_agent_id_fkey FOREIGN KEY (agent_id) REFERENCES public.ai_agents(id)
);
CREATE TABLE public.ai_agent_performance (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project text,
  agent_name text,
  success_rate double precision,
  avg_response_time_ms double precision,
  total_interactions integer,
  performance_data jsonb,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ai_agent_performance_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ai_agents (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL UNIQUE,
  type character varying NOT NULL,
  model character varying NOT NULL,
  capabilities jsonb NOT NULL DEFAULT '[]'::jsonb,
  specializations ARRAY,
  confidence_score numeric DEFAULT 0.80 CHECK (confidence_score >= 0::numeric AND confidence_score <= 1::numeric),
  energy_level integer DEFAULT 100 CHECK (energy_level >= 0 AND energy_level <= 100),
  experience_points integer DEFAULT 0,
  status character varying DEFAULT 'active'::character varying,
  config jsonb DEFAULT '{}'::jsonb,
  last_activation timestamp with time zone,
  total_activations integer DEFAULT 0,
  success_rate numeric DEFAULT 0.00,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  last_active timestamp with time zone,
  total_executions integer DEFAULT 0,
  average_response_time_ms integer DEFAULT 0,
  CONSTRAINT ai_agents_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ai_automation_rules (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  trigger_conditions jsonb NOT NULL,
  action_sequence jsonb NOT NULL,
  ai_decision_model uuid,
  learning_enabled boolean DEFAULT true,
  success_metrics jsonb,
  execution_count integer DEFAULT 0,
  success_rate real,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT ai_automation_rules_pkey PRIMARY KEY (id),
  CONSTRAINT ai_automation_rules_ai_decision_model_fkey FOREIGN KEY (ai_decision_model) REFERENCES public.ai_models(id)
);
CREATE TABLE public.ai_board_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  timestamp timestamp with time zone DEFAULT now(),
  from_agent text,
  to_agent text,
  message_type text NOT NULL,
  content text,
  meta_data jsonb DEFAULT '{}'::jsonb,
  session_id uuid,
  CONSTRAINT ai_board_logs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ai_board_sessions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  session_type character varying NOT NULL,
  board_members ARRAY NOT NULL,
  agenda jsonb NOT NULL,
  decisions_made jsonb DEFAULT '[]'::jsonb,
  action_items jsonb DEFAULT '[]'::jsonb,
  metrics_reviewed jsonb DEFAULT '{}'::jsonb,
  performance_score numeric CHECK (performance_score IS NULL OR performance_score >= 0::numeric AND performance_score <= 1::numeric),
  next_session_scheduled timestamp with time zone,
  status character varying DEFAULT 'scheduled'::character varying,
  started_at timestamp with time zone,
  ended_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT ai_board_sessions_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ai_consensus_decisions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  decision_topic character varying NOT NULL,
  initiator_agent_id uuid,
  participating_agents ARRAY NOT NULL,
  voting_data jsonb NOT NULL,
  consensus_type character varying NOT NULL,
  threshold_required numeric NOT NULL CHECK (threshold_required >= 0::numeric AND threshold_required <= 1::numeric),
  threshold_achieved numeric,
  final_decision jsonb,
  dissenting_opinions jsonb DEFAULT '[]'::jsonb,
  execution_plan jsonb,
  status character varying DEFAULT 'voting'::character varying,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  decided_at timestamp with time zone,
  executed_at timestamp with time zone,
  CONSTRAINT ai_consensus_decisions_pkey PRIMARY KEY (id),
  CONSTRAINT ai_consensus_decisions_initiator_agent_id_fkey FOREIGN KEY (initiator_agent_id) REFERENCES public.ai_agents(id)
);
CREATE TABLE public.ai_conversation_context (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  session_id character varying NOT NULL,
  context_data jsonb NOT NULL,
  entities_mentioned jsonb,
  intent_history jsonb,
  last_interaction timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  expires_at timestamp without time zone,
  CONSTRAINT ai_conversation_context_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ai_decision_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  session_id uuid,
  agent_id uuid NOT NULL,
  decision_type character varying NOT NULL,
  context jsonb NOT NULL,
  options_considered jsonb NOT NULL,
  chosen_option jsonb NOT NULL,
  confidence_score numeric NOT NULL CHECK (confidence_score >= 0::numeric AND confidence_score <= 1::numeric),
  reasoning text,
  outcome character varying,
  feedback_score numeric CHECK (feedback_score IS NULL OR feedback_score >= 0::numeric AND feedback_score <= 1::numeric),
  contributing_agents ARRAY,
  neural_pathway_id uuid,
  execution_time_ms integer,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  evaluated_at timestamp with time zone,
  CONSTRAINT ai_decision_logs_pkey PRIMARY KEY (id),
  CONSTRAINT ai_decision_logs_neural_pathway_id_fkey FOREIGN KEY (neural_pathway_id) REFERENCES public.ai_neural_pathways(id),
  CONSTRAINT ai_decision_logs_agent_id_fkey FOREIGN KEY (agent_id) REFERENCES public.ai_agents(id)
);
CREATE TABLE public.ai_directives (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  directive_name text NOT NULL UNIQUE,
  directive_type text NOT NULL,
  priority integer NOT NULL DEFAULT 50,
  active boolean DEFAULT true,
  conditions jsonb NOT NULL DEFAULT '{}'::jsonb,
  actions jsonb NOT NULL DEFAULT '[]'::jsonb,
  metadata jsonb DEFAULT '{}'::jsonb,
  success_count integer DEFAULT 0,
  failure_count integer DEFAULT 0,
  last_executed timestamp with time zone,
  expires_at timestamp with time zone,
  created_by text DEFAULT 'system'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ai_directives_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ai_embeddings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  entity_type character varying NOT NULL,
  entity_id uuid NOT NULL,
  content text NOT NULL,
  embedding jsonb,
  embedding_dimensions integer DEFAULT 1536,
  model_id uuid,
  metadata jsonb,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT ai_embeddings_pkey PRIMARY KEY (id),
  CONSTRAINT ai_embeddings_model_id_fkey FOREIGN KEY (model_id) REFERENCES public.ai_models(id)
);
CREATE TABLE public.ai_estimates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  estimate_id character varying NOT NULL UNIQUE,
  customer_email character varying NOT NULL,
  property_address text,
  total_cost_cents integer NOT NULL,
  material_cost_cents integer,
  labor_cost_cents integer,
  timeline_days integer,
  confidence_score numeric,
  details jsonb,
  status character varying DEFAULT 'pending'::character varying,
  created_at timestamp without time zone DEFAULT now(),
  converted_at timestamp without time zone,
  CONSTRAINT ai_estimates_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ai_generations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  user_id uuid,
  proposal_id uuid,
  model text NOT NULL,
  prompt text NOT NULL,
  response text,
  tokens_used integer,
  cost numeric,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ai_generations_pkey PRIMARY KEY (id),
  CONSTRAINT ai_generations_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id),
  CONSTRAINT ai_generations_proposal_id_fkey FOREIGN KEY (proposal_id) REFERENCES public.proposals(id),
  CONSTRAINT ai_generations_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.ai_improvement_cycles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  cycle_number integer NOT NULL,
  focus_area character varying NOT NULL,
  baseline_metrics jsonb NOT NULL,
  target_metrics jsonb NOT NULL,
  achieved_metrics jsonb,
  improvements_implemented jsonb DEFAULT '[]'::jsonb,
  participating_agents ARRAY NOT NULL,
  success_rate numeric CHECK (success_rate IS NULL OR success_rate >= 0::numeric AND success_rate <= 1::numeric),
  lessons_learned ARRAY,
  next_cycle_recommendations jsonb,
  started_at timestamp with time zone NOT NULL,
  completed_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT ai_improvement_cycles_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ai_insights (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  category character varying NOT NULL,
  priority character varying NOT NULL,
  title character varying NOT NULL,
  description text NOT NULL,
  impact_assessment jsonb NOT NULL,
  recommended_actions jsonb NOT NULL,
  affected_entities jsonb,
  confidence_score real NOT NULL,
  value_opportunity numeric,
  time_sensitivity character varying,
  model_id uuid,
  status character varying DEFAULT 'active'::character varying,
  resolved_at timestamp without time zone,
  resolved_by uuid,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT ai_insights_pkey PRIMARY KEY (id),
  CONSTRAINT ai_insights_model_id_fkey FOREIGN KEY (model_id) REFERENCES public.ai_models(id)
);
CREATE TABLE public.ai_learning_patterns (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  pattern_name character varying NOT NULL,
  pattern_type character varying NOT NULL,
  discovered_by_agent_id uuid,
  pattern_data jsonb NOT NULL,
  occurrence_count integer DEFAULT 1,
  success_rate numeric CHECK (success_rate IS NULL OR success_rate >= 0::numeric AND success_rate <= 1::numeric),
  applicability_score numeric DEFAULT 0.5,
  shared_with_agents ARRAY DEFAULT '{}'::uuid[],
  implementation_status character varying DEFAULT 'discovered'::character varying,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  validated_at timestamp with time zone,
  deployed_at timestamp with time zone,
  CONSTRAINT ai_learning_patterns_pkey PRIMARY KEY (id),
  CONSTRAINT ai_learning_patterns_discovered_by_agent_id_fkey FOREIGN KEY (discovered_by_agent_id) REFERENCES public.ai_agents(id)
);
CREATE TABLE public.ai_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  prompt text,
  response text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ai_logs_pkey PRIMARY KEY (id),
  CONSTRAINT ai_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.ai_memories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  agent_id character varying NOT NULL,
  user_id uuid,
  key character varying NOT NULL,
  value jsonb NOT NULL,
  content text,
  summary text,
  vector_data jsonb,
  vector_data_metadata jsonb,
  vector_embeddings USER-DEFINED,
  metadata jsonb DEFAULT '{}'::jsonb,
  memory_type character varying DEFAULT 'general'::character varying,
  category character varying,
  tags ARRAY DEFAULT ARRAY[]::text[],
  importance numeric DEFAULT 0.5,
  parent_id uuid,
  related_memories ARRAY DEFAULT ARRAY[]::uuid[],
  media_type character varying,
  media_url text,
  media_metadata jsonb,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  accessed_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  expires_at timestamp without time zone,
  access_count integer DEFAULT 0,
  last_accessed_by uuid,
  version integer DEFAULT 1,
  previous_version_id uuid,
  is_active boolean DEFAULT true,
  is_deleted boolean DEFAULT false,
  is_indexed boolean DEFAULT false,
  index_updated_at timestamp without time zone,
  CONSTRAINT ai_memories_pkey PRIMARY KEY (id),
  CONSTRAINT ai_memories_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.ai_memories(id)
);
CREATE TABLE public.ai_memory_clusters (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  cluster_name character varying NOT NULL,
  cluster_type character varying NOT NULL,
  agent_ids ARRAY,
  memories jsonb NOT NULL DEFAULT '[]'::jsonb,
  vector_embedding USER-DEFINED,
  importance_score numeric DEFAULT 0.5 CHECK (importance_score >= 0::numeric AND importance_score <= 1::numeric),
  access_count integer DEFAULT 0,
  consolidation_count integer DEFAULT 0,
  last_accessed timestamp with time zone,
  last_consolidated timestamp with time zone,
  retention_priority integer DEFAULT 5,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  expires_at timestamp with time zone,
  CONSTRAINT ai_memory_clusters_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ai_memory_feedback (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  memory_id uuid,
  user_id uuid NOT NULL,
  feedback_type character varying NOT NULL,
  comment text,
  rating integer CHECK (rating >= 1 AND rating <= 5),
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT ai_memory_feedback_pkey PRIMARY KEY (id),
  CONSTRAINT ai_memory_feedback_memory_id_fkey FOREIGN KEY (memory_id) REFERENCES public.ai_memories(id)
);
CREATE TABLE public.ai_memory_relationships (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  source_memory_id uuid,
  target_memory_id uuid,
  relationship_type character varying NOT NULL,
  strength numeric DEFAULT 0.5,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT ai_memory_relationships_pkey PRIMARY KEY (id),
  CONSTRAINT ai_memory_relationships_source_memory_id_fkey FOREIGN KEY (source_memory_id) REFERENCES public.ai_memories(id),
  CONSTRAINT ai_memory_relationships_target_memory_id_fkey FOREIGN KEY (target_memory_id) REFERENCES public.ai_memories(id)
);
CREATE TABLE public.ai_models (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  provider character varying NOT NULL,
  model_id character varying NOT NULL,
  capabilities jsonb NOT NULL,
  context_window integer,
  cost_per_1k_tokens numeric,
  performance_metrics jsonb,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT ai_models_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ai_neural_pathways (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  pathway_type character varying NOT NULL,
  neurons ARRAY NOT NULL,
  activation_count integer DEFAULT 0,
  average_latency integer,
  reliability_score numeric DEFAULT 1.0,
  is_primary boolean DEFAULT false,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  last_used timestamp with time zone,
  CONSTRAINT ai_neural_pathways_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ai_neurons (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  agent_id uuid NOT NULL,
  neuron_type character varying NOT NULL,
  layer integer NOT NULL,
  activation_function character varying DEFAULT 'relu'::character varying,
  weight numeric DEFAULT 1.0,
  bias numeric DEFAULT 0.0,
  activation_threshold numeric DEFAULT 0.5,
  current_value numeric DEFAULT 0.0,
  last_fired timestamp with time zone,
  fire_count integer DEFAULT 0,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT ai_neurons_pkey PRIMARY KEY (id),
  CONSTRAINT ai_neurons_agent_id_fkey FOREIGN KEY (agent_id) REFERENCES public.ai_agents(id)
);
CREATE TABLE public.ai_patterns (
  pattern_id character varying NOT NULL,
  pattern_type character varying,
  description text,
  confidence numeric,
  occurrences integer DEFAULT 0,
  meta_data jsonb DEFAULT '{}'::jsonb,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT ai_patterns_pkey PRIMARY KEY (pattern_id)
);
CREATE TABLE public.ai_predictions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  entity_type character varying NOT NULL,
  entity_id uuid NOT NULL,
  prediction_type character varying NOT NULL,
  prediction_data jsonb NOT NULL,
  confidence_score real NOT NULL,
  model_id uuid,
  reasoning text,
  actual_outcome jsonb,
  accuracy_score real,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  expires_at timestamp without time zone,
  CONSTRAINT ai_predictions_pkey PRIMARY KEY (id),
  CONSTRAINT ai_predictions_model_id_fkey FOREIGN KEY (model_id) REFERENCES public.ai_models(id)
);
CREATE TABLE public.ai_synapses (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  from_neuron_id uuid NOT NULL,
  to_neuron_id uuid NOT NULL,
  connection_strength numeric DEFAULT 1.0 CHECK (connection_strength >= '-10'::integer::numeric AND connection_strength <= 10::numeric),
  plasticity numeric DEFAULT 0.5,
  transmission_speed integer DEFAULT 100,
  neurotransmitter_type character varying DEFAULT 'excitatory'::character varying,
  last_transmission timestamp with time zone,
  transmission_count integer DEFAULT 0,
  learning_rate numeric DEFAULT 0.01,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT ai_synapses_pkey PRIMARY KEY (id),
  CONSTRAINT ai_synapses_from_neuron_id_fkey FOREIGN KEY (from_neuron_id) REFERENCES public.ai_neurons(id),
  CONSTRAINT ai_synapses_to_neuron_id_fkey FOREIGN KEY (to_neuron_id) REFERENCES public.ai_neurons(id)
);
CREATE TABLE public.ai_system_state (
  id integer NOT NULL DEFAULT nextval('ai_system_state_id_seq'::regclass),
  state jsonb NOT NULL DEFAULT '{}'::jsonb,
  last_updated timestamp with time zone DEFAULT now(),
  CONSTRAINT ai_system_state_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ai_tasks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  task_id character varying NOT NULL UNIQUE,
  title text NOT NULL,
  description text,
  status character varying DEFAULT 'pending'::character varying,
  priority integer DEFAULT 5,
  category character varying,
  created_by character varying DEFAULT 'ai'::character varying,
  assigned_to character varying,
  is_production boolean DEFAULT true,
  has_fake_data boolean DEFAULT false,
  validation_status character varying,
  revenue_impact numeric,
  affects_mrg boolean DEFAULT false,
  context jsonb,
  previous_attempts integer DEFAULT 0,
  error_log jsonb,
  started_at timestamp without time zone,
  completed_at timestamp without time zone,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT ai_tasks_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ai_usage_logs (
  id uuid NOT NULL,
  user_id uuid NOT NULL,
  service character varying NOT NULL,
  model character varying NOT NULL,
  endpoint character varying NOT NULL,
  request_type character varying,
  input_tokens integer,
  output_tokens integer,
  total_tokens integer,
  tokens_used integer,
  input_cost double precision,
  output_cost double precision,
  total_cost double precision,
  request_id character varying,
  response_time_ms integer,
  status_code integer,
  error text,
  meta_data json,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT ai_usage_logs_pkey PRIMARY KEY (id),
  CONSTRAINT ai_usage_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.alembic_version (
  version_num character varying NOT NULL,
  CONSTRAINT alembic_version_pkey PRIMARY KEY (version_num)
);
CREATE TABLE public.analytics_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_type character varying NOT NULL,
  user_id uuid,
  session_id character varying,
  properties jsonb DEFAULT '{}'::jsonb,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT analytics_events_pkey PRIMARY KEY (id),
  CONSTRAINT analytics_events_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.api_keys (
  id uuid NOT NULL,
  user_id uuid NOT NULL,
  name character varying NOT NULL,
  key_hash character varying NOT NULL UNIQUE,
  prefix character varying NOT NULL,
  scopes json,
  last_used_at timestamp without time zone,
  usage_count integer,
  is_active boolean,
  expires_at timestamp without time zone,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT api_keys_pkey PRIMARY KEY (id),
  CONSTRAINT api_keys_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.app_users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  email character varying NOT NULL UNIQUE,
  hashed_password character varying NOT NULL,
  full_name character varying,
  phone character varying,
  avatar_url character varying,
  bio text,
  company character varying,
  is_active boolean DEFAULT true,
  is_verified boolean DEFAULT false,
  is_superuser boolean DEFAULT false,
  is_seller boolean DEFAULT false,
  role character varying DEFAULT 'user'::character varying,
  two_factor_enabled boolean DEFAULT false,
  two_factor_secret character varying,
  two_factor_secret_temp character varying,
  two_factor_backup_codes json DEFAULT '[]'::json,
  last_login timestamp without time zone,
  failed_login_attempts integer DEFAULT 0,
  locked_until timestamp without time zone,
  reset_token character varying,
  reset_token_expires timestamp without time zone,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  username character varying UNIQUE,
  CONSTRAINT app_users_pkey PRIMARY KEY (id)
);
CREATE TABLE public.auth_tokens (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  token character varying NOT NULL UNIQUE,
  token_type character varying NOT NULL DEFAULT 'access'::character varying,
  expires_at timestamp with time zone NOT NULL,
  revoked boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT auth_tokens_pkey PRIMARY KEY (id),
  CONSTRAINT auth_tokens_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.app_users(id)
);
CREATE TABLE public.automation_actions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  rule_id uuid,
  action_type character varying NOT NULL,
  action_config jsonb DEFAULT '{}'::jsonb,
  execution_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT automation_actions_pkey PRIMARY KEY (id),
  CONSTRAINT automation_actions_rule_id_fkey FOREIGN KEY (rule_id) REFERENCES public.automation_rules(id)
);
CREATE TABLE public.automation_execution_log (
  id integer NOT NULL DEFAULT nextval('automation_execution_log_id_seq'::regclass),
  automation_id integer,
  executed_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  status text,
  result jsonb,
  CONSTRAINT automation_execution_log_pkey PRIMARY KEY (id),
  CONSTRAINT automation_execution_log_automation_id_fkey FOREIGN KEY (automation_id) REFERENCES public.automations(id)
);
CREATE TABLE public.automation_executions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  workflow_id uuid,
  trigger_data jsonb DEFAULT '{}'::jsonb,
  status character varying NOT NULL,
  started_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  completed_at timestamp with time zone,
  error_message text,
  execution_log jsonb DEFAULT '[]'::jsonb,
  CONSTRAINT automation_executions_pkey PRIMARY KEY (id),
  CONSTRAINT automation_executions_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.automation_workflows(id)
);
CREATE TABLE public.automation_rules (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  workflow_id uuid,
  rule_order integer NOT NULL,
  condition_type character varying NOT NULL,
  condition_config jsonb DEFAULT '{}'::jsonb,
  action_type character varying NOT NULL,
  action_config jsonb DEFAULT '{}'::jsonb,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT automation_rules_pkey PRIMARY KEY (id),
  CONSTRAINT automation_rules_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.automation_workflows(id)
);
CREATE TABLE public.automation_runs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  automation_id integer,
  status character varying DEFAULT 'pending'::character varying,
  started_at timestamp without time zone DEFAULT now(),
  completed_at timestamp without time zone,
  error_message text,
  results jsonb DEFAULT '{}'::jsonb,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT automation_runs_pkey PRIMARY KEY (id),
  CONSTRAINT automation_runs_automation_id_fkey FOREIGN KEY (automation_id) REFERENCES public.automations(id)
);
CREATE TABLE public.automation_templates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  description text,
  category character varying,
  template_config jsonb NOT NULL,
  is_public boolean DEFAULT false,
  created_by uuid,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT automation_templates_pkey PRIMARY KEY (id),
  CONSTRAINT automation_templates_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.app_users(id)
);
CREATE TABLE public.automation_workflows (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  description text,
  trigger_type character varying NOT NULL,
  trigger_config jsonb DEFAULT '{}'::jsonb,
  is_active boolean DEFAULT true,
  created_by uuid,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT automation_workflows_pkey PRIMARY KEY (id),
  CONSTRAINT automation_workflows_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.app_users(id)
);
CREATE TABLE public.automations (
  id integer NOT NULL DEFAULT nextval('automations_id_seq'::regclass),
  name character varying NOT NULL,
  description text,
  trigger_type character varying,
  action_type character varying,
  config jsonb DEFAULT '{}'::jsonb,
  status character varying DEFAULT 'active'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  enabled boolean DEFAULT true,
  last_run_at timestamp without time zone,
  run_count integer DEFAULT 0,
  conditions jsonb DEFAULT '{}'::jsonb,
  actions jsonb DEFAULT '[]'::jsonb,
  CONSTRAINT automations_pkey PRIMARY KEY (id)
);
CREATE TABLE public.blog_posts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  slug text NOT NULL UNIQUE,
  title text NOT NULL,
  content text,
  published_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT blog_posts_pkey PRIMARY KEY (id)
);
CREATE TABLE public.blog_topics (
  id integer NOT NULL DEFAULT nextval('blog_topics_id_seq'::regclass),
  topic text NOT NULL,
  keywords ARRAY,
  category character varying,
  priority integer DEFAULT 1,
  status character varying DEFAULT 'pending'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  published_at timestamp with time zone,
  meta_data jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT blog_topics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.brainlink_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_type character varying NOT NULL,
  channel character varying NOT NULL,
  sender_agent_id uuid,
  recipient_agent_ids ARRAY,
  priority integer DEFAULT 5 CHECK (priority >= 1 AND priority <= 10),
  payload jsonb NOT NULL,
  require_consensus boolean DEFAULT false,
  consensus_threshold numeric DEFAULT 0.66,
  status character varying DEFAULT 'pending'::character varying,
  responses jsonb DEFAULT '[]'::jsonb,
  result jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  processed_at timestamp with time zone,
  completed_at timestamp with time zone,
  ttl_seconds integer DEFAULT 3600,
  CONSTRAINT brainlink_events_pkey PRIMARY KEY (id),
  CONSTRAINT brainlink_events_sender_agent_id_fkey FOREIGN KEY (sender_agent_id) REFERENCES public.ai_agents(id)
);
CREATE TABLE public.brainops_memory_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project text,
  event_type text,
  event_data jsonb,
  severity text,
  timestamp timestamp with time zone DEFAULT now(),
  CONSTRAINT brainops_memory_events_pkey PRIMARY KEY (id)
);
CREATE TABLE public.brainops_shared_knowledge (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  knowledge_type text,
  tags ARRAY,
  metadata jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT brainops_shared_knowledge_pkey PRIMARY KEY (id)
);
CREATE TABLE public.business_metrics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  org_id uuid NOT NULL,
  metric_date date NOT NULL,
  metric_type character varying NOT NULL,
  daily_revenue numeric,
  mtd_revenue numeric,
  ytd_revenue numeric,
  jobs_completed integer,
  average_job_duration real,
  customer_satisfaction real,
  resource_utilization real,
  schedule_efficiency real,
  predicted_revenue_30d numeric,
  predicted_jobs_30d integer,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT business_metrics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.businesses (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  legal_name character varying,
  tax_id character varying,
  phone character varying,
  email character varying,
  website character varying,
  address text,
  city character varying,
  state character varying,
  zip_code character varying,
  country character varying DEFAULT 'USA'::character varying,
  logo_url character varying,
  description text,
  is_active boolean DEFAULT true,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT businesses_pkey PRIMARY KEY (id)
);
CREATE TABLE public.cad_features (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  layer_id uuid,
  feature_type character varying NOT NULL,
  feature_class character varying,
  geometry jsonb NOT NULL,
  properties jsonb DEFAULT '{}'::jsonb,
  area_sqft double precision,
  length_ft double precision,
  material_type character varying,
  system_type character varying,
  slope double precision,
  thickness double precision,
  r_value double precision,
  warranty_years integer,
  install_date date,
  status character varying DEFAULT 'active'::character varying,
  locked boolean DEFAULT false,
  notes text,
  tags ARRAY,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_by uuid,
  CONSTRAINT cad_features_pkey PRIMARY KEY (id),
  CONSTRAINT cad_features_layer_id_fkey FOREIGN KEY (layer_id) REFERENCES public.cad_layers(id),
  CONSTRAINT cad_features_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id),
  CONSTRAINT cad_features_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.cad_projects(id),
  CONSTRAINT cad_features_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.cad_layers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  name character varying NOT NULL,
  display_name character varying,
  layer_type character varying NOT NULL,
  color character varying DEFAULT '#3B82F6'::character varying,
  visible boolean DEFAULT true,
  locked boolean DEFAULT false,
  z_order integer DEFAULT 0,
  style_properties jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cad_layers_pkey PRIMARY KEY (id),
  CONSTRAINT cad_layers_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.cad_projects(id)
);
CREATE TABLE public.cad_projects (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  center_lat double precision NOT NULL,
  center_lng double precision NOT NULL,
  zoom integer DEFAULT 18,
  address text,
  client_name character varying,
  project_number character varying,
  status character varying DEFAULT 'draft'::character varying,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_by uuid,
  CONSTRAINT cad_projects_pkey PRIMARY KEY (id),
  CONSTRAINT cad_projects_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT cad_projects_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id)
);
CREATE TABLE public.campaigns (
  id uuid NOT NULL,
  name character varying NOT NULL,
  type character varying NOT NULL,
  description text,
  start_date date NOT NULL,
  end_date date,
  budget_cents integer,
  actual_cost_cents integer,
  target_audience json,
  goals json,
  leads_generated integer,
  opportunities_created integer,
  revenue_attributed_cents integer,
  content_urls json,
  email_templates json,
  status character varying,
  created_by uuid NOT NULL,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT campaigns_pkey PRIMARY KEY (id),
  CONSTRAINT campaigns_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.cart_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  cart_id uuid,
  product_id uuid,
  quantity integer DEFAULT 1,
  price_cents integer NOT NULL,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT cart_items_pkey PRIMARY KEY (id),
  CONSTRAINT cart_items_cart_id_fkey FOREIGN KEY (cart_id) REFERENCES public.shopping_carts(id),
  CONSTRAINT cart_items_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.carts (
  user_id uuid NOT NULL,
  items jsonb NOT NULL DEFAULT '[]'::jsonb,
  subtotal numeric DEFAULT 0,
  tax numeric DEFAULT 0,
  shipping numeric DEFAULT 0,
  total numeric DEFAULT 0,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT carts_pkey PRIMARY KEY (user_id)
);
CREATE TABLE public.centerpoint_cache (
  id integer NOT NULL DEFAULT nextval('centerpoint_cache_id_seq'::regclass),
  entity_type character varying NOT NULL,
  entity_id character varying NOT NULL,
  data jsonb NOT NULL,
  synced_at timestamp with time zone DEFAULT now(),
  CONSTRAINT centerpoint_cache_pkey PRIMARY KEY (id)
);
CREATE TABLE public.centerpoint_communications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  centerpoint_id text NOT NULL UNIQUE,
  customer_id text,
  job_id text,
  communication_type text,
  direction text,
  subject text,
  content text,
  from_address text,
  to_address text,
  date_time timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  duration_seconds integer,
  status text,
  tags jsonb DEFAULT '[]'::jsonb,
  attachments jsonb DEFAULT '[]'::jsonb,
  raw_data jsonb,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT centerpoint_communications_pkey PRIMARY KEY (id)
);
CREATE TABLE public.centerpoint_companies (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  external_id text UNIQUE,
  data jsonb NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT centerpoint_companies_pkey PRIMARY KEY (id)
);
CREATE TABLE public.centerpoint_employees (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  centerpoint_id text NOT NULL UNIQUE,
  employee_number text NOT NULL,
  first_name text NOT NULL,
  last_name text NOT NULL,
  email text,
  phone text,
  role text,
  department text,
  hire_date date,
  status text DEFAULT 'active'::text,
  hourly_rate numeric,
  skills jsonb DEFAULT '[]'::jsonb,
  certifications jsonb DEFAULT '[]'::jsonb,
  emergency_contact jsonb,
  notes text,
  raw_data jsonb,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  name text,
  data jsonb DEFAULT '{}'::jsonb,
  is_active boolean DEFAULT true,
  CONSTRAINT centerpoint_employees_pkey PRIMARY KEY (id)
);
CREATE TABLE public.centerpoint_equipment (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  centerpoint_id text NOT NULL UNIQUE,
  equipment_number text NOT NULL,
  name text NOT NULL,
  type text,
  manufacturer text,
  model text,
  serial_number text,
  purchase_date date,
  purchase_price numeric,
  current_value numeric,
  status text DEFAULT 'active'::text,
  location text,
  assigned_to text,
  last_service_date date,
  next_service_date date,
  notes text,
  raw_data jsonb,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT centerpoint_equipment_pkey PRIMARY KEY (id)
);
CREATE TABLE public.centerpoint_estimates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  centerpoint_id text NOT NULL UNIQUE,
  estimate_number text NOT NULL,
  customer_id text,
  job_id text,
  estimate_date date,
  expiry_date date,
  total_amount numeric,
  status text DEFAULT 'draft'::text,
  converted_to_job boolean DEFAULT false,
  converted_job_id text,
  line_items jsonb DEFAULT '[]'::jsonb,
  terms text,
  notes text,
  raw_data jsonb,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT centerpoint_estimates_pkey PRIMARY KEY (id)
);
CREATE TABLE public.centerpoint_files (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  centerpoint_id text NOT NULL UNIQUE,
  file_name text NOT NULL,
  file_type text,
  file_size bigint,
  file_url text,
  storage_path text,
  entity_type text,
  entity_id text,
  uploaded_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  uploaded_by text,
  tags jsonb DEFAULT '[]'::jsonb,
  metadata jsonb DEFAULT '{}'::jsonb,
  is_synced boolean DEFAULT false,
  is_downloaded boolean DEFAULT false,
  download_attempts integer DEFAULT 0,
  last_download_attempt timestamp without time zone,
  checksum text,
  raw_data jsonb,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  url text,
  data jsonb DEFAULT '{}'::jsonb,
  external_id character varying UNIQUE,
  CONSTRAINT centerpoint_files_pkey PRIMARY KEY (id)
);
CREATE TABLE public.centerpoint_invoices (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  centerpoint_id text NOT NULL UNIQUE,
  invoice_number text NOT NULL,
  customer_id text,
  job_id text,
  invoice_date date,
  due_date date,
  subtotal numeric,
  tax_amount numeric,
  total_amount numeric,
  paid_amount numeric,
  balance_due numeric,
  status text DEFAULT 'pending'::text,
  payment_terms text,
  line_items jsonb DEFAULT '[]'::jsonb,
  payments jsonb DEFAULT '[]'::jsonb,
  notes text,
  raw_data jsonb,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  customer_name text,
  amount numeric,
  data jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT centerpoint_invoices_pkey PRIMARY KEY (id)
);
CREATE TABLE public.centerpoint_job_history (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  centerpoint_id text NOT NULL UNIQUE,
  job_id text,
  job_number text,
  customer_id text,
  action_type text,
  action_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  action_by text,
  old_value jsonb,
  new_value jsonb,
  notes text,
  raw_data jsonb,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT centerpoint_job_history_pkey PRIMARY KEY (id)
);
CREATE TABLE public.centerpoint_notes (
  id integer NOT NULL DEFAULT nextval('centerpoint_notes_id_seq'::regclass),
  centerpoint_id character varying NOT NULL UNIQUE,
  entity_type character varying,
  entity_id character varying,
  subject character varying,
  content text,
  author character varying,
  is_internal boolean DEFAULT false,
  data jsonb,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT centerpoint_notes_pkey PRIMARY KEY (id)
);
CREATE TABLE public.centerpoint_photos (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  centerpoint_id text NOT NULL UNIQUE,
  photo_name text NOT NULL,
  photo_url text,
  thumbnail_url text,
  storage_path text,
  entity_type text,
  entity_id text,
  caption text,
  taken_date timestamp without time zone,
  taken_by text,
  latitude numeric,
  longitude numeric,
  tags jsonb DEFAULT '[]'::jsonb,
  metadata jsonb DEFAULT '{}'::jsonb,
  is_synced boolean DEFAULT false,
  is_downloaded boolean DEFAULT false,
  raw_data jsonb,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT centerpoint_photos_pkey PRIMARY KEY (id)
);
CREATE TABLE public.centerpoint_productions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  external_id text UNIQUE,
  data jsonb NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT centerpoint_productions_pkey PRIMARY KEY (id)
);
CREATE TABLE public.centerpoint_products (
  id integer NOT NULL DEFAULT nextval('centerpoint_products_id_seq'::regclass),
  centerpoint_id character varying NOT NULL UNIQUE,
  name character varying,
  sku character varying,
  description text,
  price numeric,
  cost numeric,
  category character varying,
  is_active boolean DEFAULT true,
  data jsonb,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT centerpoint_products_pkey PRIMARY KEY (id)
);
CREATE TABLE public.centerpoint_sync_data (
  id integer NOT NULL DEFAULT nextval('centerpoint_sync_data_id_seq'::regclass),
  entity_type character varying NOT NULL,
  centerpoint_id character varying NOT NULL,
  data jsonb,
  is_synced boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT centerpoint_sync_data_pkey PRIMARY KEY (id)
);
CREATE TABLE public.centerpoint_sync_log (
  id integer NOT NULL DEFAULT nextval('centerpoint_sync_log_id_seq'::regclass),
  sync_type character varying,
  status character varying,
  started_at timestamp without time zone,
  completed_at timestamp without time zone,
  records_synced jsonb DEFAULT '{}'::jsonb,
  errors integer DEFAULT 0,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT centerpoint_sync_log_pkey PRIMARY KEY (id)
);
CREATE TABLE public.centerpoint_sync_status (
  id integer NOT NULL DEFAULT nextval('centerpoint_sync_status_id_seq'::regclass),
  entity_type character varying NOT NULL,
  last_sync_at timestamp with time zone,
  records_synced integer DEFAULT 0,
  status character varying DEFAULT 'pending'::character varying,
  error_message text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT centerpoint_sync_status_pkey PRIMARY KEY (id)
);
CREATE TABLE public.centerpoint_tickets (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  centerpoint_id text NOT NULL UNIQUE,
  ticket_number text NOT NULL,
  customer_id text,
  job_id text,
  title text NOT NULL,
  description text,
  priority text DEFAULT 'medium'::text,
  status text DEFAULT 'open'::text,
  category text,
  assigned_to text,
  created_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  resolved_date timestamp without time zone,
  resolution text,
  tags jsonb DEFAULT '[]'::jsonb,
  metadata jsonb DEFAULT '{}'::jsonb,
  raw_data jsonb,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT centerpoint_tickets_pkey PRIMARY KEY (id)
);
CREATE TABLE public.centerpoint_users (
  id integer NOT NULL DEFAULT nextval('centerpoint_users_id_seq'::regclass),
  centerpoint_id character varying NOT NULL UNIQUE,
  name character varying,
  email character varying,
  phone character varying,
  role character varying,
  company_id character varying,
  is_active boolean DEFAULT true,
  data jsonb,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT centerpoint_users_pkey PRIMARY KEY (id)
);
CREATE TABLE public.checkout_sessions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  session_id character varying NOT NULL UNIQUE,
  customer_email character varying NOT NULL,
  price_id character varying,
  amount_cents integer,
  status character varying DEFAULT 'pending'::character varying,
  metadata jsonb,
  created_at timestamp without time zone DEFAULT now(),
  completed_at timestamp without time zone,
  CONSTRAINT checkout_sessions_pkey PRIMARY KEY (id)
);
CREATE TABLE public.communications (
  id uuid NOT NULL,
  entity_type character varying NOT NULL,
  entity_id uuid NOT NULL,
  type USER-DEFINED NOT NULL,
  direction character varying,
  subject character varying,
  content text,
  duration_minutes integer,
  is_completed boolean,
  scheduled_at timestamp without time zone,
  completed_at timestamp without time zone,
  attachments json,
  user_id uuid NOT NULL,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT communications_pkey PRIMARY KEY (id),
  CONSTRAINT communications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.companies (
  id integer NOT NULL DEFAULT nextval('companies_id_seq'::regclass),
  name text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT companies_pkey PRIMARY KEY (id)
);
CREATE TABLE public.completed_tasks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  task_id text NOT NULL,
  task_name text NOT NULL,
  task_type text NOT NULL,
  component_name text,
  status text NOT NULL DEFAULT 'completed'::text,
  metadata jsonb NOT NULL DEFAULT '{}'::jsonb,
  start_time timestamp with time zone NOT NULL,
  end_time timestamp with time zone NOT NULL,
  duration_ms integer DEFAULT (EXTRACT(epoch FROM (end_time - start_time)) * (1000)::numeric),
  created_by text DEFAULT 'claude'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT completed_tasks_pkey PRIMARY KEY (id)
);
CREATE TABLE public.consciousness_evolution (
  id integer NOT NULL DEFAULT nextval('consciousness_evolution_id_seq'::regclass),
  consciousness_level double precision NOT NULL,
  evolution_stage character varying,
  decisions_count integer DEFAULT 0,
  repairs_count integer DEFAULT 0,
  learning_count integer DEFAULT 0,
  capabilities jsonb,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT consciousness_evolution_pkey PRIMARY KEY (id)
);
CREATE TABLE public.contacts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  name text,
  email text,
  phone text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT contacts_pkey PRIMARY KEY (id),
  CONSTRAINT contacts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.conversion_events (
  id integer NOT NULL DEFAULT nextval('conversion_events_id_seq'::regclass),
  event_type character varying NOT NULL,
  user_id character varying,
  session_id character varying,
  page_url text,
  referrer text,
  value numeric,
  currency character varying DEFAULT 'USD'::character varying,
  meta_data jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT conversion_events_pkey PRIMARY KEY (id)
);
CREATE TABLE public.copilot_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title text NOT NULL,
  content text,
  role text DEFAULT 'assistant'::text,
  memory_type text,
  tags ARRAY,
  meta_data jsonb DEFAULT '{}'::jsonb,
  is_active boolean DEFAULT true,
  is_pinned boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  user_id text DEFAULT 'system'::text,
  importance_score double precision DEFAULT 0.5,
  CONSTRAINT copilot_messages_pkey PRIMARY KEY (id)
);
CREATE TABLE public.cp_download_jobs (
  external_id bigint NOT NULL,
  priority smallint DEFAULT 100,
  attempt_count integer DEFAULT 0,
  last_attempt_at timestamp with time zone,
  next_attempt_at timestamp with time zone,
  status text DEFAULT 'queued'::text CHECK (status = ANY (ARRAY['queued'::text, 'in_progress'::text, 'done'::text, 'failed'::text])),
  error_text text,
  bytes_downloaded bigint DEFAULT 0,
  sha256 text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  file_size_bytes bigint DEFAULT 0,
  entity_type character varying,
  entity_id character varying,
  file_url text,
  storage_path text,
  CONSTRAINT cp_download_jobs_pkey PRIMARY KEY (external_id)
);
CREATE TABLE public.cp_entity_sync (
  entity_type character varying NOT NULL,
  last_sync_at timestamp without time zone,
  last_sync_id character varying,
  records_synced integer DEFAULT 0,
  status character varying DEFAULT 'active'::character varying,
  CONSTRAINT cp_entity_sync_pkey PRIMARY KEY (entity_type)
);
CREATE TABLE public.cp_file_blobs (
  external_id bigint NOT NULL,
  content bytea NOT NULL,
  size_bytes bigint NOT NULL,
  content_type text,
  sha256 text NOT NULL,
  source_url text,
  downloaded_at timestamp with time zone NOT NULL DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  entity_type character varying,
  entity_id character varying,
  CONSTRAINT cp_file_blobs_pkey PRIMARY KEY (external_id)
);
CREATE TABLE public.cp_file_content (
  id integer NOT NULL DEFAULT nextval('cp_file_content_id_seq'::regclass),
  external_id text NOT NULL UNIQUE,
  file_url text NOT NULL,
  file_name text,
  mime_type text,
  file_size bigint,
  file_data bytea,
  thumbnail_url text,
  thumbnail_data bytea,
  metadata jsonb,
  downloaded_at timestamp with time zone DEFAULT now(),
  error_message text,
  CONSTRAINT cp_file_content_pkey PRIMARY KEY (id),
  CONSTRAINT fk_file_id FOREIGN KEY (external_id) REFERENCES public.landing_files(external_id)
);
CREATE TABLE public.cp_file_large_objects (
  external_id bigint NOT NULL,
  lo_oid integer,
  size_bytes bigint NOT NULL,
  sha256 text,
  content_type text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cp_file_large_objects_pkey PRIMARY KEY (external_id)
);
CREATE TABLE public.cp_file_queue (
  id integer NOT NULL DEFAULT nextval('cp_file_queue_id_seq'::regclass),
  external_id character varying UNIQUE,
  entity_type character varying,
  entity_id character varying,
  file_url text,
  file_name text,
  file_size bigint,
  status character varying DEFAULT 'pending'::character varying,
  attempts integer DEFAULT 0,
  error_message text,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT cp_file_queue_pkey PRIMARY KEY (id)
);
CREATE TABLE public.cp_file_storage (
  external_id bigint NOT NULL,
  bucket text NOT NULL,
  key text NOT NULL,
  size_bytes bigint NOT NULL,
  content_type text,
  sha256 text NOT NULL,
  last_accessed timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cp_file_storage_pkey PRIMARY KEY (external_id),
  CONSTRAINT fk_storage_to_job FOREIGN KEY (external_id) REFERENCES public.cp_download_jobs(external_id)
);
CREATE TABLE public.cp_files_manifest (
  external_id bigint NOT NULL,
  file_name text,
  mime_type text,
  size_hint bigint,
  gcs_path text,
  thumbnail_url text,
  created_at timestamp with time zone,
  updated_at timestamp with time zone,
  raw jsonb,
  file_size bigint,
  sha256_checksum text,
  status text DEFAULT 'pending'::text,
  synced_at timestamp with time zone,
  download_attempts integer DEFAULT 0,
  last_error text,
  file_size_bytes bigint DEFAULT 0,
  file_url text,
  CONSTRAINT cp_files_manifest_pkey PRIMARY KEY (external_id)
);
CREATE TABLE public.cp_storage_migrations (
  id integer NOT NULL DEFAULT nextval('cp_storage_migrations_id_seq'::regclass),
  external_id integer NOT NULL,
  file_name text,
  size_bytes bigint,
  from_location text,
  to_location text,
  reason text,
  migrated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cp_storage_migrations_pkey PRIMARY KEY (id)
);
CREATE TABLE public.cp_sync_status (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  entity_type character varying,
  last_sync timestamp with time zone,
  records_synced integer,
  total_records integer,
  status character varying,
  error_message text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cp_sync_status_pkey PRIMARY KEY (id)
);
CREATE TABLE public.cron_job_history (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  job_name character varying NOT NULL,
  status character varying NOT NULL,
  started_at timestamp with time zone NOT NULL,
  completed_at timestamp with time zone,
  error_message text,
  metadata jsonb,
  CONSTRAINT cron_job_history_pkey PRIMARY KEY (id)
);
CREATE TABLE public.cross_ai_memory (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  source_agent character varying NOT NULL,
  target_agents ARRAY,
  memory_key character varying NOT NULL,
  memory_value jsonb NOT NULL,
  memory_type character varying NOT NULL,
  embedding USER-DEFINED,
  importance_score double precision DEFAULT 0.5,
  access_count integer DEFAULT 0,
  last_accessed_at timestamp with time zone,
  expires_at timestamp with time zone,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT cross_ai_memory_pkey PRIMARY KEY (id)
);
CREATE TABLE public.customer_ltv (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  customer_email character varying NOT NULL UNIQUE,
  total_revenue_cents integer DEFAULT 0,
  order_count integer DEFAULT 0,
  subscription_months integer DEFAULT 0,
  avg_order_value_cents integer DEFAULT 0,
  predicted_ltv_cents integer DEFAULT 0,
  churn_risk_score numeric,
  last_purchase_at timestamp without time zone,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT customer_ltv_pkey PRIMARY KEY (id)
);
CREATE TABLE public.customer_segments (
  id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  criteria json NOT NULL,
  member_count integer,
  last_calculated timestamp without time zone,
  is_active boolean,
  created_by uuid NOT NULL,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT customer_segments_pkey PRIMARY KEY (id),
  CONSTRAINT customer_segments_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.customers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  email character varying,
  phone character varying,
  company_name character varying,
  billing_address text,
  billing_city character varying,
  billing_state character varying,
  billing_zip character varying,
  billing_country character varying,
  service_address text,
  service_city character varying,
  service_state character varying,
  service_zip character varying,
  credit_limit integer,
  payment_terms character varying,
  tax_exempt boolean,
  tax_exempt_number character varying,
  source character varying,
  tags json,
  notes text,
  is_active boolean,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  org_id uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000001'::uuid,
  mobile text,
  address jsonb,
  type text DEFAULT 'residential'::text,
  status text DEFAULT 'active'::text,
  lead_source text,
  external_id text UNIQUE,
  latitude numeric,
  longitude numeric,
  customer_type text DEFAULT 'residential'::text,
  country text DEFAULT 'US'::text,
  city text,
  state text,
  zip text,
  customer_id uuid DEFAULT gen_random_uuid(),
  organization_id uuid DEFAULT '00000000-0000-0000-0000-000000000001'::uuid,
  address_line1 text,
  address_line2 text,
  CONSTRAINT customers_pkey PRIMARY KEY (id),
  CONSTRAINT customers_org_id_fkey FOREIGN KEY (org_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.dashboard_insights (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  insight text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT dashboard_insights_pkey PRIMARY KEY (id),
  CONSTRAINT dashboard_insights_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.database_health_checks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  check_timestamp timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  is_healthy boolean NOT NULL,
  health_score integer NOT NULL,
  tables_checked integer NOT NULL,
  tables_missing integer NOT NULL,
  indexes_checked integer NOT NULL,
  indexes_missing integer NOT NULL,
  functions_checked integer NOT NULL,
  functions_missing integer NOT NULL,
  missing_objects jsonb,
  schema_drift jsonb,
  performance_issues jsonb,
  repair_needed boolean DEFAULT false,
  repair_recommendations jsonb,
  check_duration_ms integer NOT NULL,
  environment character varying DEFAULT 'production'::character varying,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT database_health_checks_pkey PRIMARY KEY (id)
);
CREATE TABLE public.db_sync_status (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  sync_type character varying,
  table_name character varying,
  status character varying NOT NULL,
  details jsonb DEFAULT '{}'::jsonb,
  error_message text,
  started_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  completed_at timestamp with time zone,
  issues_found integer,
  fixes_applied integer,
  fixes_failed integer,
  duration double precision,
  duration_seconds double precision,
  CONSTRAINT db_sync_status_pkey PRIMARY KEY (id)
);
CREATE TABLE public.deploy_hooks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  service character varying NOT NULL,
  url text NOT NULL,
  environment character varying DEFAULT 'production'::character varying,
  is_active boolean DEFAULT true,
  last_triggered timestamp without time zone,
  last_result jsonb,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT deploy_hooks_pkey PRIMARY KEY (id)
);
CREATE TABLE public.deployment_knowledge (
  id integer NOT NULL DEFAULT nextval('deployment_knowledge_id_seq'::regclass),
  version character varying NOT NULL,
  deployment_date timestamp without time zone DEFAULT now(),
  status character varying,
  success_rate numeric,
  critical_fixes jsonb,
  test_results jsonb,
  revenue_status jsonb,
  next_steps jsonb,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT deployment_knowledge_pkey PRIMARY KEY (id)
);
CREATE TABLE public.deployment_log (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  deployment_id text NOT NULL UNIQUE,
  component_name text NOT NULL,
  version text NOT NULL,
  environment text NOT NULL DEFAULT 'production'::text,
  deployment_type text NOT NULL,
  status text NOT NULL DEFAULT 'pending'::text,
  start_time timestamp with time zone NOT NULL DEFAULT now(),
  end_time timestamp with time zone,
  duration_seconds integer,
  commit_hash text,
  deployed_by text DEFAULT 'claude'::text,
  deployment_metadata jsonb DEFAULT '{}'::jsonb,
  error_details jsonb,
  rollback_version text,
  health_checks jsonb DEFAULT '[]'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT deployment_log_pkey PRIMARY KEY (id)
);
CREATE TABLE public.deployment_records (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  service_type character varying NOT NULL,
  service_name character varying NOT NULL,
  service_id character varying,
  deployment_id character varying NOT NULL,
  deployment_url text,
  deployment_status character varying NOT NULL,
  git_branch character varying,
  git_commit character varying,
  git_message text,
  docker_image character varying,
  is_rollbackable boolean DEFAULT true,
  previous_deployment_id uuid,
  rolled_back_at timestamp with time zone,
  rolled_back_by uuid,
  deployed_by uuid,
  deployed_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  environment character varying DEFAULT 'production'::character varying,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT deployment_records_pkey PRIMARY KEY (id)
);
CREATE TABLE public.diagnostic_results (
  id integer NOT NULL DEFAULT nextval('diagnostic_results_id_seq'::regclass),
  diagnostic_type character varying NOT NULL,
  status character varying NOT NULL,
  details jsonb,
  errors jsonb,
  suggestions jsonb,
  health_score double precision,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT diagnostic_results_pkey PRIMARY KEY (id)
);
CREATE TABLE public.digital_deliveries (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  order_id uuid,
  download_url text NOT NULL,
  accessed boolean DEFAULT false,
  accessed_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT digital_deliveries_pkey PRIMARY KEY (id),
  CONSTRAINT digital_deliveries_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.document_chunks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  document_id uuid NOT NULL,
  chunk_index integer NOT NULL,
  text text NOT NULL,
  start_char integer NOT NULL,
  end_char integer NOT NULL,
  document_title text NOT NULL,
  document_type character varying NOT NULL,
  document_metadata jsonb DEFAULT '{}'::jsonb,
  embedding USER-DEFINED,
  tokens integer,
  overlap_prev integer DEFAULT 0,
  overlap_next integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT document_chunks_pkey PRIMARY KEY (id)
);
CREATE TABLE public.document_templates (
  id uuid NOT NULL,
  user_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  template_type character varying,
  document_type character varying,
  template_content text NOT NULL,
  template text NOT NULL,
  variables json,
  example_context json,
  example_output text,
  is_public boolean,
  category character varying,
  tags json,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT document_templates_pkey PRIMARY KEY (id),
  CONSTRAINT document_templates_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.documents (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title text NOT NULL,
  document_type character varying NOT NULL,
  category character varying NOT NULL,
  content_hash character varying NOT NULL,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT documents_pkey PRIMARY KEY (id)
);
CREATE TABLE public.email_queue (
  id integer NOT NULL DEFAULT nextval('email_queue_id_seq'::regclass),
  recipient_email character varying NOT NULL,
  subject character varying NOT NULL,
  template character varying,
  data jsonb,
  scheduled_for timestamp without time zone DEFAULT now(),
  sent_at timestamp without time zone,
  status character varying DEFAULT 'pending'::character varying,
  error text,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT email_queue_pkey PRIMARY KEY (id)
);
CREATE TABLE public.email_templates (
  id integer NOT NULL DEFAULT nextval('email_templates_id_seq'::regclass),
  name character varying NOT NULL UNIQUE,
  subject text,
  body text,
  active boolean DEFAULT true,
  usage_count integer DEFAULT 0,
  last_used timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT email_templates_pkey PRIMARY KEY (id)
);
CREATE TABLE public.embedding_models (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL UNIQUE,
  provider character varying NOT NULL,
  model_type character varying NOT NULL,
  dimension integer NOT NULL,
  is_active boolean DEFAULT true,
  config jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT embedding_models_pkey PRIMARY KEY (id)
);
CREATE TABLE public.embeddings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  model_id uuid,
  source_type character varying NOT NULL,
  source_id uuid NOT NULL,
  content text NOT NULL,
  embedding USER-DEFINED,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT embeddings_pkey PRIMARY KEY (id),
  CONSTRAINT embeddings_model_id_fkey FOREIGN KEY (model_id) REFERENCES public.embedding_models(id)
);
CREATE TABLE public.employees (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  org_id uuid NOT NULL,
  user_id uuid,
  employee_number character varying UNIQUE,
  first_name character varying NOT NULL,
  last_name character varying NOT NULL,
  email character varying NOT NULL,
  phone character varying,
  role character varying,
  department character varying,
  reports_to uuid,
  skills jsonb,
  certifications jsonb,
  skill_match_scores jsonb,
  performance_score real,
  efficiency_rating real,
  quality_rating real,
  customer_satisfaction_rating real,
  availability_pattern jsonb,
  preferred_job_types jsonb,
  max_weekly_hours integer,
  burnout_risk_score real,
  retention_probability real,
  optimal_workload integer,
  hourly_rate numeric,
  overtime_rate numeric,
  employment_status character varying DEFAULT 'active'::character varying,
  hire_date date,
  termination_date date,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  organization_id uuid DEFAULT '00000000-0000-0000-0000-000000000001'::uuid,
  position character varying,
  salary_cents integer DEFAULT 0,
  is_active boolean DEFAULT true,
  CONSTRAINT employees_pkey PRIMARY KEY (id)
);
CREATE TABLE public.env_master (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  key character varying NOT NULL,
  value text NOT NULL,
  description text,
  category character varying,
  project character varying,
  environment character varying DEFAULT 'production'::character varying,
  is_sensitive boolean DEFAULT false,
  is_active boolean DEFAULT true,
  last_rotated timestamp without time zone,
  expires_at timestamp without time zone,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  created_by character varying DEFAULT 'system'::character varying,
  metadata jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT env_master_pkey PRIMARY KEY (id)
);
CREATE TABLE public.env_master_audit (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  env_id uuid,
  action character varying,
  old_value text,
  new_value text,
  changed_by character varying,
  changed_at timestamp without time zone DEFAULT now(),
  reason text,
  CONSTRAINT env_master_audit_pkey PRIMARY KEY (id),
  CONSTRAINT env_master_audit_env_id_fkey FOREIGN KEY (env_id) REFERENCES public.env_master(id)
);
CREATE TABLE public.env_vars (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  key character varying NOT NULL UNIQUE,
  value text NOT NULL,
  description text,
  is_secret boolean DEFAULT false,
  is_active boolean DEFAULT true,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_by character varying,
  CONSTRAINT env_vars_pkey PRIMARY KEY (id)
);
CREATE TABLE public.env_vault (
  key text NOT NULL,
  value text NOT NULL,
  project text NOT NULL,
  source_file text NOT NULL,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  is_encrypted boolean DEFAULT false,
  active boolean DEFAULT true,
  description text,
  category text,
  required boolean DEFAULT true,
  last_rotated timestamp without time zone,
  rotation_interval_days integer,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  created_by text DEFAULT 'system'::text,
  modified_by text DEFAULT 'system'::text,
  version integer DEFAULT 1,
  tags ARRAY,
  metadata jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT env_vault_pkey PRIMARY KEY (key)
);
CREATE TABLE public.env_vault_audit (
  id integer NOT NULL DEFAULT nextval('env_vault_audit_id_seq'::regclass),
  key text NOT NULL,
  old_value text,
  new_value text,
  action text NOT NULL,
  changed_by text NOT NULL,
  changed_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  reason text,
  metadata jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT env_vault_audit_pkey PRIMARY KEY (id)
);
CREATE TABLE public.error_log (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  error_code text,
  error_message text NOT NULL,
  error_type text NOT NULL,
  component_name text,
  stack_trace text,
  context jsonb NOT NULL DEFAULT '{}'::jsonb,
  severity text NOT NULL DEFAULT 'medium'::text,
  resolution_status text DEFAULT 'open'::text,
  resolution_steps jsonb DEFAULT '[]'::jsonb,
  auto_healed boolean DEFAULT false,
  healing_agent text,
  healing_timestamp timestamp with time zone,
  occurred_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT error_log_pkey PRIMARY KEY (id)
);
CREATE TABLE public.estimate_records (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_name text NOT NULL,
  building_type character varying NOT NULL,
  roof_area_sf double precision NOT NULL,
  roof_type character varying NOT NULL,
  system_type character varying NOT NULL,
  material_cost double precision NOT NULL,
  labor_cost double precision NOT NULL,
  total_cost double precision NOT NULL,
  cost_per_sf double precision NOT NULL,
  margin_percentage double precision NOT NULL,
  scope_items ARRAY DEFAULT '{}'::text[],
  special_conditions ARRAY DEFAULT '{}'::text[],
  warranty_years integer NOT NULL,
  location text NOT NULL,
  estimate_date timestamp with time zone NOT NULL,
  valid_until timestamp with time zone NOT NULL,
  status character varying DEFAULT 'draft'::character varying,
  won_project boolean,
  actual_cost double precision,
  embedding USER-DEFINED,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT estimate_records_pkey PRIMARY KEY (id)
);
CREATE TABLE public.estimates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  inspection_id uuid,
  project_id uuid,
  estimate_number character varying NOT NULL UNIQUE,
  client_name character varying NOT NULL,
  client_email character varying,
  client_phone character varying,
  subtotal double precision NOT NULL,
  tax_rate double precision,
  tax_amount double precision,
  discount_amount double precision,
  total double precision NOT NULL,
  line_items json NOT NULL,
  status character varying,
  valid_until date NOT NULL,
  created_by_id uuid NOT NULL,
  sent_at timestamp without time zone,
  approved_at timestamp without time zone,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  customer_id uuid NOT NULL,
  title character varying NOT NULL,
  description text,
  estimate_date date NOT NULL,
  subtotal_cents integer NOT NULL,
  tax_cents integer,
  discount_cents integer,
  total_cents integer NOT NULL,
  terms_conditions text,
  sent_date timestamp without time zone,
  viewed_date timestamp without time zone,
  accepted_date timestamp without time zone,
  declined_date timestamp without time zone,
  converted_to_invoice_id uuid,
  created_by uuid NOT NULL,
  org_id uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000001'::uuid,
  external_id text UNIQUE,
  job_id uuid,
  notes text,
  organization_id uuid DEFAULT '00000000-0000-0000-0000-000000000001'::uuid,
  subtotal_amount bigint DEFAULT 0,
  total_amount bigint DEFAULT 0,
  CONSTRAINT estimates_pkey PRIMARY KEY (id),
  CONSTRAINT estimates_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT estimates_inspection_id_fkey FOREIGN KEY (inspection_id) REFERENCES public.inspections(id),
  CONSTRAINT estimates_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT estimates_converted_to_invoice_id_fkey FOREIGN KEY (converted_to_invoice_id) REFERENCES public.invoices(id),
  CONSTRAINT estimates_org_id_fkey FOREIGN KEY (org_id) REFERENCES public.organizations(id),
  CONSTRAINT estimates_created_by_id_fkey FOREIGN KEY (created_by_id) REFERENCES public.users(id),
  CONSTRAINT estimates_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.etl_checkpoints (
  id integer NOT NULL DEFAULT nextval('etl_checkpoints_id_seq'::regclass),
  domain text NOT NULL UNIQUE,
  last_page integer DEFAULT 0,
  last_updated_at timestamp with time zone,
  total_processed integer DEFAULT 0,
  status text DEFAULT 'pending'::text,
  error_count integer DEFAULT 0,
  started_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  metadata jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT etl_checkpoints_pkey PRIMARY KEY (id)
);
CREATE TABLE public.etl_metrics (
  id integer NOT NULL DEFAULT nextval('etl_metrics_id_seq'::regclass),
  run_id uuid DEFAULT gen_random_uuid(),
  domain text NOT NULL,
  operation text NOT NULL,
  processed integer DEFAULT 0,
  inserted integer DEFAULT 0,
  updated integer DEFAULT 0,
  skipped integer DEFAULT 0,
  errors integer DEFAULT 0,
  duration_ms integer,
  started_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  CONSTRAINT etl_metrics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.etl_sync_status (
  id integer NOT NULL DEFAULT nextval('etl_sync_status_id_seq'::regclass),
  sync_id uuid DEFAULT gen_random_uuid(),
  mode character varying NOT NULL,
  entity_type character varying NOT NULL,
  source_count integer DEFAULT 0,
  inserted_count integer DEFAULT 0,
  updated_count integer DEFAULT 0,
  tombstoned_count integer DEFAULT 0,
  error_count integer DEFAULT 0,
  checkpoint text,
  last_error text,
  started_at timestamp with time zone NOT NULL DEFAULT now(),
  completed_at timestamp with time zone,
  duration_seconds numeric,
  CONSTRAINT etl_sync_status_pkey PRIMARY KEY (id)
);
CREATE TABLE public.etl_tombstones (
  id integer NOT NULL DEFAULT nextval('etl_tombstones_id_seq'::regclass),
  entity_type character varying NOT NULL,
  entity_id uuid NOT NULL,
  external_id text,
  tombstoned_at timestamp with time zone DEFAULT now(),
  reason text,
  CONSTRAINT etl_tombstones_pkey PRIMARY KEY (id)
);
CREATE TABLE public.execution_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  agent character varying NOT NULL,
  action character varying NOT NULL,
  target text,
  result jsonb,
  notes text,
  timestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  success boolean DEFAULT true,
  error_message text,
  execution_time_ms integer,
  CONSTRAINT execution_logs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.expenses (
  id uuid NOT NULL,
  expense_number character varying NOT NULL,
  job_id uuid,
  vendor_id uuid,
  expense_date date NOT NULL,
  category character varying NOT NULL,
  subcategory character varying,
  description text NOT NULL,
  amount_cents integer NOT NULL,
  tax_cents integer,
  total_cents integer NOT NULL,
  payment_method character varying,
  payment_reference character varying,
  receipt_url text,
  receipt_stored boolean,
  is_reimbursable boolean,
  reimbursed boolean,
  reimbursement_date date,
  employee_id uuid,
  is_billable boolean,
  markup_percentage double precision,
  billed boolean,
  invoice_id uuid,
  quickbooks_expense_id character varying,
  notes text,
  tags json,
  requires_approval boolean,
  approved boolean,
  approved_by uuid,
  approved_date timestamp without time zone,
  created_by uuid NOT NULL,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT expenses_pkey PRIMARY KEY (id),
  CONSTRAINT expenses_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT expenses_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id),
  CONSTRAINT expenses_vendor_id_fkey FOREIGN KEY (vendor_id) REFERENCES public.vendors(id),
  CONSTRAINT expenses_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.users(id),
  CONSTRAINT expenses_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES public.invoices(id),
  CONSTRAINT expenses_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES public.users(id)
);
CREATE TABLE public.file_storage (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  file_name character varying NOT NULL,
  file_path text,
  bucket_name character varying,
  storage_provider character varying DEFAULT 'supabase'::character varying,
  file_size_bytes bigint,
  mime_type character varying,
  entity_type character varying,
  entity_id character varying,
  checksum character varying,
  is_public boolean DEFAULT false,
  metadata jsonb DEFAULT '{}'::jsonb,
  uploaded_at timestamp without time zone DEFAULT now(),
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT file_storage_pkey PRIMARY KEY (id)
);
CREATE TABLE public.health_metrics (
  id integer NOT NULL DEFAULT nextval('health_metrics_id_seq'::regclass),
  metric_type character varying NOT NULL,
  value double precision NOT NULL,
  components jsonb,
  alerts jsonb,
  status character varying DEFAULT 'unknown'::character varying,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT health_metrics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.inspection_photos (
  id uuid NOT NULL,
  inspection_id uuid NOT NULL,
  file_path character varying NOT NULL,
  thumbnail_path character varying,
  caption text,
  location json,
  tags json,
  ai_analysis json,
  damage_detected boolean,
  taken_at timestamp without time zone NOT NULL,
  uploaded_at timestamp without time zone NOT NULL,
  CONSTRAINT inspection_photos_pkey PRIMARY KEY (id),
  CONSTRAINT inspection_photos_inspection_id_fkey FOREIGN KEY (inspection_id) REFERENCES public.inspections(id)
);
CREATE TABLE public.inspections (
  id uuid NOT NULL,
  project_id uuid,
  property_address text NOT NULL,
  inspector_id uuid NOT NULL,
  status character varying,
  roof_type character varying,
  roof_age integer,
  measurements json,
  damage_assessment json,
  recommendations text,
  scheduled_at timestamp without time zone,
  started_at timestamp without time zone,
  completed_at timestamp without time zone,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT inspections_pkey PRIMARY KEY (id),
  CONSTRAINT inspections_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT inspections_inspector_id_fkey FOREIGN KEY (inspector_id) REFERENCES public.users(id)
);
CREATE TABLE public.integration_configs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  integration_id uuid,
  config_key character varying NOT NULL,
  config_value text,
  is_encrypted boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT integration_configs_pkey PRIMARY KEY (id),
  CONSTRAINT integration_configs_integration_id_fkey FOREIGN KEY (integration_id) REFERENCES public.integrations(id)
);
CREATE TABLE public.integrations (
  id uuid NOT NULL,
  user_id uuid NOT NULL,
  type character varying NOT NULL,
  name character varying NOT NULL,
  config json NOT NULL,
  is_active boolean,
  meta_data json,
  access_token text,
  refresh_token text,
  token_expires_at timestamp without time zone,
  webhook_url character varying,
  webhook_secret character varying,
  connected_at timestamp without time zone NOT NULL,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  last_synced_at timestamp without time zone,
  last_sync_at timestamp without time zone,
  CONSTRAINT integrations_pkey PRIMARY KEY (id),
  CONSTRAINT integrations_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.inventory (
  product_id uuid NOT NULL,
  quantity_on_hand integer DEFAULT 0,
  quantity_reserved integer DEFAULT 0,
  quantity_available integer DEFAULT (quantity_on_hand - quantity_reserved),
  reorder_point integer DEFAULT 10,
  reorder_quantity integer DEFAULT 50,
  last_restocked timestamp without time zone,
  warehouse_location character varying DEFAULT 'MAIN'::character varying,
  CONSTRAINT inventory_pkey PRIMARY KEY (product_id),
  CONSTRAINT inventory_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.inventory_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  business_id uuid,
  sku character varying UNIQUE,
  name character varying NOT NULL,
  description text,
  category character varying,
  unit_price numeric,
  cost numeric,
  quantity_on_hand integer DEFAULT 0,
  reorder_point integer,
  reorder_quantity integer,
  supplier character varying,
  supplier_sku character varying,
  is_active boolean DEFAULT true,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  org_id uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000001'::uuid,
  on_hand integer DEFAULT 0,
  available integer DEFAULT 0,
  allocated integer DEFAULT 0,
  organization_id uuid DEFAULT '00000000-0000-0000-0000-000000000001'::uuid,
  unit character varying,
  unit_cost bigint DEFAULT 0,
  CONSTRAINT inventory_items_pkey PRIMARY KEY (id),
  CONSTRAINT inventory_items_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id),
  CONSTRAINT inventory_items_org_id_fkey FOREIGN KEY (org_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.inventory_transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  item_id uuid,
  transaction_type character varying,
  quantity integer,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT inventory_transactions_pkey PRIMARY KEY (id)
);
CREATE TABLE public.invoices (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  invoice_number character varying NOT NULL,
  customer_id uuid NOT NULL,
  estimate_id uuid,
  job_id uuid,
  title character varying NOT NULL,
  description text,
  invoice_date date NOT NULL,
  due_date date NOT NULL,
  subtotal_cents integer NOT NULL,
  tax_cents integer,
  discount_cents integer,
  total_cents integer NOT NULL,
  amount_paid_cents integer,
  balance_cents integer NOT NULL,
  line_items json NOT NULL,
  tax_details json,
  terms_conditions text,
  notes text,
  status character varying,
  sent_date timestamp without time zone,
  viewed_date timestamp without time zone,
  paid_date timestamp without time zone,
  void_date timestamp without time zone,
  void_reason text,
  payment_method character varying,
  payment_reference character varying,
  stripe_invoice_id character varying,
  quickbooks_invoice_id character varying,
  created_by uuid NOT NULL,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  org_id uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000001'::uuid,
  external_id text UNIQUE,
  organization_id uuid DEFAULT '00000000-0000-0000-0000-000000000001'::uuid,
  subtotal_amount bigint DEFAULT 0,
  tax_amount bigint DEFAULT 0,
  total_amount bigint DEFAULT 0,
  amount_cents bigint,
  sent_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  paid_at timestamp without time zone,
  total_amount_cents bigint,
  CONSTRAINT invoices_pkey PRIMARY KEY (id),
  CONSTRAINT invoices_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id),
  CONSTRAINT invoices_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT invoices_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT invoices_org_id_fkey FOREIGN KEY (org_id) REFERENCES public.organizations(id),
  CONSTRAINT invoices_estimate_id_fkey FOREIGN KEY (estimate_id) REFERENCES public.estimates(id)
);
CREATE TABLE public.job_queue (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  job_type character varying NOT NULL,
  payload jsonb,
  status character varying DEFAULT 'pending'::character varying,
  priority integer DEFAULT 5,
  max_retries integer DEFAULT 3,
  retry_count integer DEFAULT 0,
  scheduled_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  started_at timestamp with time zone,
  completed_at timestamp with time zone,
  error_message text,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT job_queue_pkey PRIMARY KEY (id)
);
CREATE TABLE public.jobs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  job_number character varying,
  customer_id uuid,
  estimate_id uuid,
  title character varying NOT NULL,
  description text,
  job_address text,
  job_city character varying,
  job_state character varying,
  job_zip character varying,
  scheduled_start date,
  scheduled_end date,
  actual_start date,
  actual_end date,
  estimated_revenue integer,
  actual_revenue integer,
  estimated_costs integer,
  actual_costs integer,
  status character varying,
  completion_percentage integer,
  invoice_id uuid,
  is_billable boolean,
  created_by uuid,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  org_id uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000001'::uuid,
  priority text DEFAULT 'MEDIUM'::text,
  metadata jsonb DEFAULT '{}'::jsonb,
  location jsonb,
  external_id text UNIQUE,
  job_type text,
  total_amount numeric DEFAULT 0,
  paid_amount numeric DEFAULT 0,
  start_date date,
  end_date date,
  address text,
  city text,
  state text,
  zip text,
  source text DEFAULT 'manual'::text,
  crew_id uuid,
  scheduled_date date,
  started_at timestamp with time zone,
  completed_at timestamp with time zone,
  revenue_cents bigint DEFAULT 0,
  notes text,
  archived boolean DEFAULT false,
  organization_id uuid DEFAULT '00000000-0000-0000-0000-000000000001'::uuid,
  CONSTRAINT jobs_pkey PRIMARY KEY (id),
  CONSTRAINT jobs_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT jobs_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT jobs_estimate_id_fkey FOREIGN KEY (estimate_id) REFERENCES public.estimates(id),
  CONSTRAINT jobs_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES public.invoices(id),
  CONSTRAINT jobs_org_id_fkey FOREIGN KEY (org_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.knowledge_articles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title character varying NOT NULL,
  content text,
  content_type character varying DEFAULT 'article'::character varying,
  status character varying DEFAULT 'draft'::character varying,
  category_id uuid,
  tags ARRAY DEFAULT ARRAY[]::text[],
  metadata jsonb DEFAULT '{}'::jsonb,
  author_id uuid,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  published_at timestamp without time zone,
  view_count integer DEFAULT 0,
  helpful_count integer DEFAULT 0,
  not_helpful_count integer DEFAULT 0,
  version integer DEFAULT 1,
  parent_id uuid,
  is_archived boolean DEFAULT false,
  CONSTRAINT knowledge_articles_pkey PRIMARY KEY (id),
  CONSTRAINT knowledge_articles_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.knowledge_articles(id)
);
CREATE TABLE public.knowledge_categories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  parent_id uuid,
  icon character varying,
  color character varying,
  sort_order integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  article_count integer DEFAULT 0,
  CONSTRAINT knowledge_categories_pkey PRIMARY KEY (id),
  CONSTRAINT knowledge_categories_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.knowledge_categories(id)
);
CREATE TABLE public.knowledge_entries (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  category character varying NOT NULL,
  title text NOT NULL,
  description text,
  body text NOT NULL,
  structured_data jsonb,
  examples jsonb DEFAULT '[]'::jsonb,
  doc_references ARRAY DEFAULT '{}'::text[],
  validated boolean DEFAULT false,
  validation_date timestamp with time zone,
  quality_score double precision DEFAULT 0.0,
  usage_count integer DEFAULT 0,
  last_accessed timestamp with time zone,
  version integer DEFAULT 1,
  previous_versions ARRAY DEFAULT '{}'::uuid[],
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT knowledge_entries_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_activities (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  external_id text NOT NULL UNIQUE,
  data jsonb NOT NULL,
  checksum text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT landing_activities_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_building_outlines (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  external_id text NOT NULL UNIQUE,
  data jsonb NOT NULL,
  checksum text,
  geom USER-DEFINED,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT landing_building_outlines_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_centerpoint_companies (
  id text NOT NULL,
  name text,
  data jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT landing_centerpoint_companies_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_centerpoint_jobs (
  id text NOT NULL,
  name text,
  data jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT landing_centerpoint_jobs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_companies (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  external_id text NOT NULL UNIQUE,
  data jsonb NOT NULL,
  checksum text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT landing_companies_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_contacts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  external_id text NOT NULL UNIQUE,
  data jsonb NOT NULL,
  checksum text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT landing_contacts_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_customers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  centerpoint_id character varying UNIQUE,
  name character varying,
  email character varying,
  phone character varying,
  address jsonb,
  data jsonb,
  synced_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT landing_customers_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_estimates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  centerpoint_id character varying UNIQUE,
  job_id character varying,
  customer_id character varying,
  total numeric,
  status character varying,
  data jsonb,
  synced_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT landing_estimates_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_files (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  external_id text NOT NULL UNIQUE,
  data jsonb NOT NULL,
  checksum text,
  size_bytes bigint,
  original_name text,
  content_type text,
  storage_path text,
  company_id text,
  production_id text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT landing_files_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_invoices (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  external_id text NOT NULL UNIQUE,
  data jsonb NOT NULL,
  checksum text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT landing_invoices_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_jobs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  centerpoint_id character varying UNIQUE,
  customer_id character varying,
  title character varying,
  status character varying,
  value numeric,
  data jsonb,
  synced_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT landing_jobs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_notes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  external_id text NOT NULL UNIQUE,
  data jsonb NOT NULL,
  checksum text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT landing_notes_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_productions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  external_id text NOT NULL UNIQUE,
  data jsonb NOT NULL,
  checksum text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT landing_productions_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_products (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  external_id text NOT NULL UNIQUE,
  data jsonb NOT NULL,
  checksum text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT landing_products_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_properties (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  external_id text NOT NULL UNIQUE,
  data jsonb NOT NULL,
  checksum text,
  geom USER-DEFINED,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT landing_properties_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  external_id text NOT NULL UNIQUE,
  data jsonb NOT NULL,
  checksum text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT landing_transactions_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  external_id text NOT NULL UNIQUE,
  data jsonb NOT NULL,
  checksum text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT landing_users_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_warranties (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  external_id text NOT NULL UNIQUE,
  data jsonb NOT NULL,
  checksum text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT landing_warranties_pkey PRIMARY KEY (id)
);
CREATE TABLE public.landing_work_orders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  external_id text NOT NULL UNIQUE,
  data jsonb NOT NULL,
  checksum text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT landing_work_orders_pkey PRIMARY KEY (id)
);
CREATE TABLE public.lead_sources (
  id uuid NOT NULL,
  name character varying NOT NULL UNIQUE,
  category character varying NOT NULL,
  total_leads integer,
  qualified_leads integer,
  converted_leads integer,
  total_revenue_cents integer,
  cost_cents integer,
  conversion_rate double precision,
  cost_per_lead double precision,
  roi double precision,
  is_active boolean,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT lead_sources_pkey PRIMARY KEY (id)
);
CREATE TABLE public.leads (
  id uuid NOT NULL,
  name character varying NOT NULL,
  email character varying NOT NULL UNIQUE,
  phone character varying,
  company character varying,
  title character varying,
  source character varying NOT NULL,
  campaign_id uuid,
  score integer,
  status USER-DEFINED,
  assigned_to uuid,
  description text,
  tags json,
  custom_fields json,
  converted_to_opportunity_id uuid,
  converted_date timestamp without time zone,
  created_by uuid NOT NULL,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT leads_pkey PRIMARY KEY (id),
  CONSTRAINT leads_assigned_to_fkey FOREIGN KEY (assigned_to) REFERENCES public.users(id),
  CONSTRAINT leads_converted_to_opportunity_id_fkey FOREIGN KEY (converted_to_opportunity_id) REFERENCES public.opportunities(id),
  CONSTRAINT leads_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT leads_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES public.campaigns(id)
);
CREATE TABLE public.learning_engine (
  id integer NOT NULL DEFAULT nextval('learning_engine_id_seq'::regclass),
  name character varying NOT NULL UNIQUE,
  version character varying,
  capabilities jsonb,
  learning_sources jsonb,
  optimization_targets jsonb,
  status character varying DEFAULT 'active'::character varying,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  last_learning_cycle timestamp without time zone,
  total_patterns_learned integer DEFAULT 0,
  accuracy_score numeric DEFAULT 0.0,
  meta_data jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT learning_engine_pkey PRIMARY KEY (id)
);
CREATE TABLE public.learning_metrics (
  id integer NOT NULL DEFAULT nextval('learning_metrics_id_seq'::regclass),
  metric_name character varying NOT NULL,
  metric_value numeric,
  metric_type character varying,
  timestamp timestamp without time zone DEFAULT now(),
  meta_data jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT learning_metrics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.marketing_campaigns (
  id integer NOT NULL DEFAULT nextval('marketing_campaigns_id_seq'::regclass),
  name character varying NOT NULL,
  type character varying,
  status character varying DEFAULT 'draft'::character varying,
  budget numeric,
  target_audience character varying,
  start_date timestamp with time zone,
  end_date timestamp with time zone,
  content jsonb DEFAULT '{}'::jsonb,
  metrics jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT marketing_campaigns_pkey PRIMARY KEY (id)
);
CREATE TABLE public.master_env_vars (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  key character varying NOT NULL UNIQUE,
  value text NOT NULL,
  service character varying NOT NULL,
  environment character varying NOT NULL DEFAULT 'production'::character varying,
  description text,
  is_secret boolean DEFAULT false,
  is_active boolean DEFAULT true,
  last_synced timestamp with time zone,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT master_env_vars_pkey PRIMARY KEY (id)
);
CREATE TABLE public.material_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  material_id uuid,
  action character varying NOT NULL,
  data jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  created_by uuid,
  CONSTRAINT material_logs_pkey PRIMARY KEY (id),
  CONSTRAINT material_logs_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT material_logs_material_id_fkey FOREIGN KEY (material_id) REFERENCES public.materials_inventory(id)
);
CREATE TABLE public.material_order_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  order_id uuid,
  material_id uuid,
  name character varying NOT NULL,
  quantity integer NOT NULL,
  unit_price numeric NOT NULL,
  total numeric NOT NULL,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT material_order_items_pkey PRIMARY KEY (id),
  CONSTRAINT material_order_items_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.material_orders(id),
  CONSTRAINT material_order_items_material_id_fkey FOREIGN KEY (material_id) REFERENCES public.materials_inventory(id)
);
CREATE TABLE public.material_orders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  order_number character varying NOT NULL UNIQUE,
  supplier character varying NOT NULL,
  subtotal numeric NOT NULL DEFAULT 0,
  tax numeric NOT NULL DEFAULT 0,
  shipping numeric NOT NULL DEFAULT 0,
  total numeric NOT NULL DEFAULT 0,
  status character varying NOT NULL DEFAULT 'draft'::character varying,
  order_date timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  expected_delivery timestamp with time zone,
  tracking_number character varying,
  notes text,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  created_by uuid,
  CONSTRAINT material_orders_pkey PRIMARY KEY (id),
  CONSTRAINT material_orders_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.materials_inventory (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  sku character varying NOT NULL UNIQUE,
  category character varying NOT NULL,
  unit character varying NOT NULL,
  quantity integer NOT NULL DEFAULT 0,
  reorder_point integer NOT NULL DEFAULT 0,
  max_stock integer NOT NULL DEFAULT 0,
  unit_cost numeric NOT NULL DEFAULT 0,
  supplier character varying,
  lead_time integer DEFAULT 0,
  last_ordered timestamp with time zone,
  notes text,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  created_by uuid,
  CONSTRAINT materials_inventory_pkey PRIMARY KEY (id),
  CONSTRAINT materials_inventory_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.media_assets (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  org_id uuid NOT NULL,
  external_id text,
  kind text NOT NULL CHECK (kind = ANY (ARRAY['image'::text, 'document'::text])),
  job_id uuid,
  customer_id uuid,
  mime_type text,
  filename text NOT NULL,
  size_bytes bigint,
  checksum_sha256 text,
  storage_path text,
  thumbnails jsonb,
  metadata jsonb,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT media_assets_pkey PRIMARY KEY (id),
  CONSTRAINT media_assets_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT media_assets_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id)
);
CREATE TABLE public.memories (
  id uuid NOT NULL,
  user_id uuid NOT NULL,
  title character varying NOT NULL,
  content text NOT NULL,
  memory_type character varying,
  tags json,
  meta_data json,
  embedding json,
  is_active boolean,
  is_pinned boolean,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  accessed_at timestamp without time zone,
  CONSTRAINT memories_pkey PRIMARY KEY (id),
  CONSTRAINT memories_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.app_users(id)
);
CREATE TABLE public.memory_access_log (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  memory_id uuid NOT NULL,
  accessed_by character varying NOT NULL,
  access_type character varying NOT NULL,
  access_metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  access_location USER-DEFINED,
  access_location_accuracy_meters double precision,
  CONSTRAINT memory_access_log_pkey PRIMARY KEY (id),
  CONSTRAINT memory_access_log_memory_id_fkey FOREIGN KEY (memory_id) REFERENCES public.memory_objects(id)
);
CREATE TABLE public.memory_acl (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  memory_id uuid NOT NULL,
  principal_type character varying NOT NULL,
  principal_id character varying NOT NULL,
  permission character varying NOT NULL,
  granted_by character varying,
  granted_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  expires_at timestamp with time zone,
  CONSTRAINT memory_acl_pkey PRIMARY KEY (id),
  CONSTRAINT memory_acl_memory_id_fkey FOREIGN KEY (memory_id) REFERENCES public.memory_objects(id)
);
CREATE TABLE public.memory_collections (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  owner_type character varying NOT NULL,
  owner_id character varying NOT NULL,
  collection_metadata jsonb NOT NULL DEFAULT '{}'::jsonb,
  is_public boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT memory_collections_pkey PRIMARY KEY (id)
);
CREATE TABLE public.memory_duplicates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  memory_id uuid NOT NULL,
  duplicate_of_id uuid NOT NULL,
  similarity_score double precision NOT NULL,
  detection_method character varying,
  resolved boolean DEFAULT false,
  resolution_action character varying,
  resolved_by character varying,
  resolved_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT memory_duplicates_pkey PRIMARY KEY (id),
  CONSTRAINT memory_duplicates_duplicate_of_id_fkey FOREIGN KEY (duplicate_of_id) REFERENCES public.memory_objects(id),
  CONSTRAINT memory_duplicates_memory_id_fkey FOREIGN KEY (memory_id) REFERENCES public.memory_objects(id)
);
CREATE TABLE public.memory_entries (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  key character varying NOT NULL,
  content text DEFAULT '{}'::jsonb,
  metadata jsonb,
  owner_type character varying,
  owner_id character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone,
  tags ARRAY DEFAULT ARRAY[]::text[],
  importance integer DEFAULT 5,
  access_count integer DEFAULT 0,
  last_accessed timestamp with time zone,
  embedding USER-DEFINED,
  search_vector tsvector,
  memory_type character varying NOT NULL DEFAULT 'general'::character varying,
  value text,
  accessed_at timestamp without time zone,
  context_json jsonb NOT NULL DEFAULT '{}'::jsonb,
  category character varying,
  version character varying,
  description text,
  is_active character varying DEFAULT 'true'::character varying,
  memory_id uuid NOT NULL DEFAULT gen_random_uuid(),
  title character varying NOT NULL DEFAULT 'Untitled'::character varying,
  meta_data jsonb DEFAULT '{}'::jsonb,
  is_pinned boolean DEFAULT false,
  role character varying DEFAULT 'user'::character varying,
  CONSTRAINT memory_entries_pkey PRIMARY KEY (memory_id)
);
CREATE TABLE public.memory_event_log (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text,
  event_type text,
  event_data jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT memory_event_log_pkey PRIMARY KEY (id)
);
CREATE TABLE public.memory_jobs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  job_type character varying NOT NULL,
  status character varying DEFAULT 'pending'::character varying,
  owner_id character varying,
  parameters jsonb DEFAULT '{}'::jsonb,
  result jsonb,
  error_message text,
  started_at timestamp with time zone,
  completed_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT memory_jobs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.memory_locations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  location USER-DEFINED NOT NULL,
  location_polygon USER-DEFINED,
  address text,
  place_id character varying,
  location_metadata jsonb DEFAULT '{}'::jsonb,
  owner_type character varying NOT NULL,
  owner_id character varying NOT NULL,
  is_public boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT memory_locations_pkey PRIMARY KEY (id)
);
CREATE TABLE public.memory_log (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  content text NOT NULL,
  entry_type character varying DEFAULT 'interaction'::character varying,
  context jsonb DEFAULT '{}'::jsonb,
  user_id character varying,
  session_id character varying,
  tags ARRAY,
  importance double precision DEFAULT 0.5,
  emotion character varying,
  learned_patterns ARRAY,
  healing_actions ARRAY,
  revenue_impact double precision,
  embedding USER-DEFINED,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT memory_log_pkey PRIMARY KEY (id)
);
CREATE TABLE public.memory_objects (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  external_id character varying,
  content_type character varying NOT NULL,
  content text,
  content_summary text,
  structured_data jsonb DEFAULT '{}'::jsonb,
  embedding USER-DEFINED,
  embedding_model character varying DEFAULT 'openai-ada-002'::character varying,
  memory_data_metadata jsonb NOT NULL DEFAULT '{}'::jsonb,
  tags ARRAY DEFAULT ARRAY[]::text[],
  keywords ARRAY DEFAULT ARRAY[]::text[],
  categories ARRAY DEFAULT ARRAY[]::text[],
  owner_type character varying NOT NULL DEFAULT 'user'::character varying,
  owner_id character varying NOT NULL,
  access_level character varying DEFAULT 'private'::character varying,
  shared_with ARRAY DEFAULT ARRAY[]::text[],
  event_timestamp timestamp with time zone,
  valid_from timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  valid_to timestamp with time zone,
  importance_score double precision DEFAULT 0.5 CHECK (importance_score >= 0::double precision AND importance_score <= 1::double precision),
  quality_score double precision DEFAULT 0.5 CHECK (quality_score >= 0::double precision AND quality_score <= 1::double precision),
  confidence_score double precision DEFAULT 1.0 CHECK (confidence_score >= 0::double precision AND confidence_score <= 1::double precision),
  source_type character varying,
  source_url text,
  source_metadata jsonb DEFAULT '{}'::jsonb,
  parent_memory_id uuid,
  related_memory_ids ARRAY DEFAULT ARRAY[]::uuid[],
  collection_ids ARRAY DEFAULT ARRAY[]::uuid[],
  status character varying DEFAULT 'active'::character varying,
  is_duplicate boolean DEFAULT false,
  is_archived boolean DEFAULT false,
  is_deleted boolean DEFAULT false,
  version integer DEFAULT 1,
  previous_version_id uuid,
  content_hash character varying,
  location USER-DEFINED,
  location_name character varying,
  location_address text,
  location_polygon USER-DEFINED,
  location_accuracy_meters double precision,
  location_source USER-DEFINED,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  accessed_at timestamp with time zone,
  access_count integer DEFAULT 0,
  last_modified_by character varying,
  media_urls ARRAY DEFAULT ARRAY[]::text[],
  media_metadata jsonb DEFAULT '{}'::jsonb,
  transcription text,
  ocr_text text,
  ai_summary text,
  ai_insights jsonb DEFAULT '{}'::jsonb,
  ai_categories ARRAY DEFAULT ARRAY[]::text[],
  processing_status character varying DEFAULT 'pending'::character varying,
  processing_metadata jsonb DEFAULT '{}'::jsonb,
  contains_pii boolean DEFAULT false,
  pii_fields ARRAY DEFAULT ARRAY[]::text[],
  retention_policy character varying,
  scheduled_deletion_date date,
  CONSTRAINT memory_objects_pkey PRIMARY KEY (id),
  CONSTRAINT fk_parent_memory FOREIGN KEY (parent_memory_id) REFERENCES public.memory_objects(id)
);
CREATE TABLE public.memory_relationships (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  source_memory_id uuid NOT NULL,
  target_memory_id uuid NOT NULL,
  relationship_type character varying NOT NULL,
  strength double precision DEFAULT 1.0,
  memory_data_metadata jsonb NOT NULL DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  created_by character varying,
  CONSTRAINT memory_relationships_pkey PRIMARY KEY (id),
  CONSTRAINT memory_relationships_source_memory_id_fkey FOREIGN KEY (source_memory_id) REFERENCES public.memory_objects(id),
  CONSTRAINT memory_relationships_target_memory_id_fkey FOREIGN KEY (target_memory_id) REFERENCES public.memory_objects(id)
);
CREATE TABLE public.memory_search_log (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id character varying NOT NULL,
  search_query text NOT NULL,
  search_type character varying,
  result_count integer,
  result_memory_ids ARRAY,
  search_metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT memory_search_log_pkey PRIMARY KEY (id)
);
CREATE TABLE public.memory_sync (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  memory_id uuid NOT NULL,
  sync_type character varying NOT NULL,
  sync_status character varying DEFAULT 'pending'::character varying,
  sync_data jsonb,
  error_message text,
  created_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  last_error text,
  CONSTRAINT memory_sync_pkey PRIMARY KEY (id)
);
CREATE TABLE public.memory_versions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  memory_id uuid NOT NULL,
  version_number integer NOT NULL,
  content text,
  structured_data jsonb,
  change_summary text,
  changed_by character varying,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT memory_versions_pkey PRIMARY KEY (id),
  CONSTRAINT memory_versions_memory_id_fkey FOREIGN KEY (memory_id) REFERENCES public.memory_objects(id)
);
CREATE TABLE public.multimodal_content (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  content_type character varying NOT NULL,
  content_data bytea,
  content_url text,
  mime_type character varying,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT multimodal_content_pkey PRIMARY KEY (id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL,
  user_id uuid NOT NULL,
  type character varying NOT NULL,
  title character varying NOT NULL,
  content text,
  data json,
  action_url character varying,
  is_read boolean,
  read_at timestamp without time zone,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.operational_procedures (
  id integer NOT NULL DEFAULT nextval('operational_procedures_id_seq'::regclass),
  procedure_name character varying NOT NULL UNIQUE,
  category character varying,
  steps jsonb,
  tools_required jsonb,
  critical_notes text,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT operational_procedures_pkey PRIMARY KEY (id)
);
CREATE TABLE public.opportunities (
  id uuid NOT NULL,
  customer_id uuid NOT NULL,
  lead_id uuid,
  title character varying NOT NULL,
  description text,
  value_cents integer NOT NULL,
  probability integer,
  stage USER-DEFINED,
  expected_close_date date NOT NULL,
  closed_date timestamp without time zone,
  assigned_to uuid NOT NULL,
  is_won boolean,
  lost_reason character varying,
  competitors json,
  tags json,
  custom_fields json,
  is_active boolean,
  created_by uuid NOT NULL,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT opportunities_pkey PRIMARY KEY (id),
  CONSTRAINT opportunities_lead_id_fkey FOREIGN KEY (lead_id) REFERENCES public.leads(id),
  CONSTRAINT opportunities_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT opportunities_assigned_to_fkey FOREIGN KEY (assigned_to) REFERENCES public.users(id),
  CONSTRAINT opportunities_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.orders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  product_id uuid,
  stripe_session_id text,
  amount numeric,
  status text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT orders_pkey PRIMARY KEY (id),
  CONSTRAINT orders_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT orders_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.organization_members (
  organization_id uuid NOT NULL,
  user_id uuid NOT NULL,
  role character varying DEFAULT 'member'::character varying,
  permissions jsonb DEFAULT '{}'::jsonb,
  joined_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  invited_by uuid,
  CONSTRAINT organization_members_pkey PRIMARY KEY (organization_id, user_id),
  CONSTRAINT organization_members_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.organizations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL UNIQUE,
  display_name character varying,
  description text,
  industry character varying,
  size character varying,
  website character varying,
  logo_url text,
  settings jsonb DEFAULT '{}'::jsonb,
  metadata jsonb DEFAULT '{}'::jsonb,
  billing_email character varying,
  tax_id character varying,
  address jsonb,
  created_by uuid,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  is_active boolean DEFAULT true,
  subscription_tier character varying DEFAULT 'free'::character varying,
  subscription_status character varying DEFAULT 'active'::character varying,
  email text,
  phone text,
  CONSTRAINT organizations_pkey PRIMARY KEY (id)
);
CREATE TABLE public.payments (
  id uuid NOT NULL,
  payment_number character varying NOT NULL,
  invoice_id uuid NOT NULL,
  customer_id uuid NOT NULL,
  payment_date date NOT NULL,
  amount_cents integer NOT NULL,
  payment_method character varying NOT NULL,
  reference_number character varying,
  card_last_four character varying,
  card_brand character varying,
  bank_name character varying,
  account_last_four character varying,
  status character varying,
  cleared_date date,
  failed_reason text,
  is_refunded boolean,
  refund_amount_cents integer,
  refund_date date,
  refund_reason text,
  stripe_payment_id character varying,
  quickbooks_payment_id character varying,
  notes text,
  created_by uuid NOT NULL,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT payments_pkey PRIMARY KEY (id),
  CONSTRAINT payments_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES public.invoices(id),
  CONSTRAINT payments_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT payments_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.persistent_memory (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  timestamp timestamp with time zone DEFAULT now(),
  category character varying,
  importance double precision DEFAULT 0.5,
  content jsonb,
  tags ARRAY,
  relationships ARRAY,
  embedding ARRAY,
  accessed_count integer DEFAULT 0,
  last_accessed timestamp with time zone,
  meta_data jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT persistent_memory_pkey PRIMARY KEY (id)
);
CREATE TABLE public.personal_notes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  content text NOT NULL,
  category character varying,
  scope character varying DEFAULT 'general'::character varying,
  tags ARRAY,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT personal_notes_pkey PRIMARY KEY (id)
);
CREATE TABLE public.pricing_strategy (
  id integer NOT NULL DEFAULT nextval('pricing_strategy_id_seq'::regclass),
  product_name character varying,
  tier character varying,
  monthly_price_cents integer,
  features jsonb,
  target_audience text,
  expected_conversions integer,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT pricing_strategy_pkey PRIMARY KEY (id)
);
CREATE TABLE public.product_bundles (
  id integer NOT NULL DEFAULT nextval('product_bundles_id_seq'::regclass),
  name character varying NOT NULL,
  description text,
  products ARRAY,
  regular_price numeric,
  bundle_price numeric,
  savings numeric,
  active boolean DEFAULT true,
  purchases integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT product_bundles_pkey PRIMARY KEY (id)
);
CREATE TABLE public.product_categories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  parent_id uuid,
  image text,
  sort_order integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_by uuid,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  category_metadata jsonb DEFAULT '{}'::jsonb,
  product_count integer DEFAULT 0,
  path ARRAY DEFAULT ARRAY[]::uuid[],
  CONSTRAINT product_categories_pkey PRIMARY KEY (id),
  CONSTRAINT fk_product_categories_parent FOREIGN KEY (parent_id) REFERENCES public.product_categories(id)
);
CREATE TABLE public.product_downloads (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  purchase_id uuid,
  product_id uuid,
  user_id uuid,
  download_token character varying NOT NULL UNIQUE,
  expires_at timestamp with time zone NOT NULL,
  download_count integer DEFAULT 0,
  max_downloads integer DEFAULT 5,
  customer_email character varying,
  created_at timestamp with time zone DEFAULT now(),
  last_downloaded_at timestamp with time zone,
  CONSTRAINT product_downloads_pkey PRIMARY KEY (id),
  CONSTRAINT product_downloads_purchase_id_fkey FOREIGN KEY (purchase_id) REFERENCES public.purchases(id),
  CONSTRAINT product_downloads_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.production_memory_embeddings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  memory_entry_id uuid NOT NULL,
  embedding_model character varying NOT NULL,
  embedding_vector USER-DEFINED,
  embedding_metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT production_memory_embeddings_pkey PRIMARY KEY (id),
  CONSTRAINT production_memory_embeddings_memory_entry_id_fkey FOREIGN KEY (memory_entry_id) REFERENCES public.production_memory_entries(id)
);
CREATE TABLE public.production_memory_entries (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  memory_key character varying NOT NULL,
  memory_value jsonb NOT NULL,
  memory_type character varying NOT NULL,
  owner_type character varying NOT NULL,
  owner_id character varying NOT NULL,
  context_id uuid,
  tags ARRAY,
  ttl integer,
  importance_score double precision DEFAULT 0.5,
  access_pattern character varying DEFAULT 'read_write'::character varying,
  encryption_key character varying,
  is_compressed boolean DEFAULT false,
  compression_type character varying,
  version integer DEFAULT 1,
  previous_version_id uuid,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  accessed_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  expires_at timestamp with time zone,
  CONSTRAINT production_memory_entries_pkey PRIMARY KEY (id)
);
CREATE TABLE public.production_memory_metadata (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  memory_entry_id uuid NOT NULL,
  metadata_key character varying NOT NULL,
  metadata_value jsonb NOT NULL,
  metadata_type character varying,
  is_indexed boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT production_memory_metadata_pkey PRIMARY KEY (id),
  CONSTRAINT production_memory_metadata_memory_entry_id_fkey FOREIGN KEY (memory_entry_id) REFERENCES public.production_memory_entries(id)
);
CREATE TABLE public.production_memory_sync (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  memory_entry_id uuid NOT NULL,
  sync_type character varying NOT NULL,
  sync_status character varying NOT NULL,
  sync_target character varying,
  sync_metadata jsonb DEFAULT '{}'::jsonb,
  error_message text,
  retry_count integer DEFAULT 0,
  next_retry_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  completed_at timestamp with time zone,
  CONSTRAINT production_memory_sync_pkey PRIMARY KEY (id),
  CONSTRAINT production_memory_sync_memory_entry_id_fkey FOREIGN KEY (memory_entry_id) REFERENCES public.production_memory_entries(id)
);
CREATE TABLE public.products (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  description text,
  price numeric,
  created_at timestamp with time zone DEFAULT now(),
  is_active boolean DEFAULT true,
  image_url text,
  digital_file_url text,
  price_cents integer,
  sku character varying,
  category_id uuid,
  cost double precision,
  product_type character varying,
  vendor_id uuid,
  created_by uuid,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  view_count integer DEFAULT 0,
  purchase_count integer DEFAULT 0,
  rating double precision DEFAULT 0,
  review_count integer DEFAULT 0,
  in_stock boolean DEFAULT true,
  tags ARRAY DEFAULT '{}'::text[],
  attributes jsonb DEFAULT '{}'::jsonb,
  images jsonb DEFAULT '[]'::jsonb,
  product_metadata jsonb DEFAULT '{}'::jsonb,
  category text,
  features jsonb DEFAULT '[]'::jsonb,
  stripe_price_id character varying,
  stripe_product_id character varying,
  stock_quantity integer DEFAULT 0,
  is_featured boolean DEFAULT false,
  metadata jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT products_pkey PRIMARY KEY (id)
);
CREATE TABLE public.project_members (
  project_id uuid,
  user_id uuid,
  role character varying,
  joined_at timestamp without time zone,
  id integer NOT NULL DEFAULT nextval('project_members_id_seq'::regclass),
  CONSTRAINT project_members_pkey PRIMARY KEY (id),
  CONSTRAINT project_members_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT project_members_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.project_schemas (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  type character varying NOT NULL,
  structure_json jsonb NOT NULL,
  version integer DEFAULT 1,
  dependencies jsonb,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  is_current boolean DEFAULT true,
  CONSTRAINT project_schemas_pkey PRIMARY KEY (id)
);
CREATE TABLE public.project_tasks (
  id uuid NOT NULL,
  project_id uuid NOT NULL,
  title character varying NOT NULL,
  description text,
  status character varying,
  priority character varying,
  assignee_id uuid,
  created_by uuid NOT NULL,
  due_date timestamp without time zone,
  completed_at timestamp without time zone,
  estimated_hours double precision,
  actual_hours double precision,
  tags json,
  checklist json,
  attachments json,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT project_tasks_pkey PRIMARY KEY (id),
  CONSTRAINT project_tasks_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT project_tasks_assignee_id_fkey FOREIGN KEY (assignee_id) REFERENCES public.users(id),
  CONSTRAINT project_tasks_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.projects (
  id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  project_type character varying,
  status character varying,
  priority character varying,
  owner_id uuid NOT NULL,
  team_id uuid,
  start_date timestamp without time zone,
  due_date timestamp without time zone,
  completed_at timestamp without time zone,
  archived_at timestamp without time zone,
  meta_data json,
  tags json,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT projects_pkey PRIMARY KEY (id),
  CONSTRAINT projects_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES public.users(id),
  CONSTRAINT projects_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id)
);
CREATE TABLE public.prompt_trace (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  prompt text,
  response text,
  confidence double precision,
  agent text,
  metadata jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT prompt_trace_pkey PRIMARY KEY (id)
);
CREATE TABLE public.properties (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  address text NOT NULL,
  city text,
  state text,
  zip text,
  lat double precision,
  lng double precision,
  customer_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT properties_pkey PRIMARY KEY (id)
);
CREATE TABLE public.proposal_activities (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  proposal_id uuid,
  action text NOT NULL,
  ip_address inet,
  user_agent text,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT proposal_activities_pkey PRIMARY KEY (id),
  CONSTRAINT proposal_activities_proposal_id_fkey FOREIGN KEY (proposal_id) REFERENCES public.proposals(id)
);
CREATE TABLE public.proposal_templates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  name text NOT NULL,
  category text NOT NULL,
  industry text,
  content jsonb NOT NULL,
  variables jsonb DEFAULT '[]'::jsonb,
  tags ARRAY DEFAULT '{}'::text[],
  is_public boolean DEFAULT false,
  usage_count integer DEFAULT 0,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT proposal_templates_pkey PRIMARY KEY (id),
  CONSTRAINT proposal_templates_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT proposal_templates_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.proposals (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  template_id uuid,
  client_name text NOT NULL,
  client_email text,
  client_company text,
  title text NOT NULL,
  content jsonb NOT NULL,
  pricing_tiers jsonb DEFAULT '[]'::jsonb,
  total_value numeric,
  status text DEFAULT 'draft'::text CHECK (status = ANY (ARRAY['draft'::text, 'sent'::text, 'viewed'::text, 'accepted'::text, 'rejected'::text, 'expired'::text])),
  sent_at timestamp with time zone,
  viewed_at timestamp with time zone,
  responded_at timestamp with time zone,
  expires_at timestamp with time zone,
  signature_data jsonb,
  public_link text UNIQUE,
  password_protected boolean DEFAULT false,
  password_hash text,
  analytics jsonb DEFAULT '{}'::jsonb,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT proposals_pkey PRIMARY KEY (id),
  CONSTRAINT proposals_template_id_fkey FOREIGN KEY (template_id) REFERENCES public.proposal_templates(id),
  CONSTRAINT proposals_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT proposals_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.purchase_orders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  purchase_order_id uuid DEFAULT gen_random_uuid(),
  supplier_id uuid,
  status character varying DEFAULT 'draft'::character varying,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT purchase_orders_pkey PRIMARY KEY (id)
);
CREATE TABLE public.purchases (
  id uuid NOT NULL,
  product_id uuid NOT NULL,
  buyer_id uuid NOT NULL,
  amount double precision NOT NULL,
  price double precision NOT NULL,
  currency character varying,
  status character varying,
  transaction_id character varying,
  payment_method character varying,
  payment_id character varying,
  license_key character varying UNIQUE,
  license_expires_at timestamp without time zone,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  completed_at timestamp without time zone,
  CONSTRAINT purchases_pkey PRIMARY KEY (id),
  CONSTRAINT purchases_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT purchases_buyer_id_fkey FOREIGN KEY (buyer_id) REFERENCES public.users(id)
);
CREATE TABLE public.rag_documents (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  title text NOT NULL,
  content text NOT NULL,
  category text,
  tags ARRAY DEFAULT '{}'::text[],
  embedding USER-DEFINED,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT rag_documents_pkey PRIMARY KEY (id),
  CONSTRAINT rag_documents_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.user_profiles(id),
  CONSTRAINT rag_documents_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.referrals (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  referrer_org_id uuid,
  referral_code text NOT NULL UNIQUE,
  referred_email text,
  referred_org_id uuid,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'claimed'::text, 'rewarded'::text, 'expired'::text])),
  reward_amount numeric,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  claimed_at timestamp with time zone,
  expires_at timestamp with time zone,
  CONSTRAINT referrals_pkey PRIMARY KEY (id),
  CONSTRAINT referrals_referrer_org_id_fkey FOREIGN KEY (referrer_org_id) REFERENCES public.organizations(id),
  CONSTRAINT referrals_referred_org_id_fkey FOREIGN KEY (referred_org_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.repair_attempts (
  id integer NOT NULL DEFAULT nextval('repair_attempts_id_seq'::regclass),
  issue_type character varying NOT NULL,
  error_details text,
  repair_attempted boolean DEFAULT false,
  success boolean DEFAULT false,
  actions_taken jsonb,
  result text,
  triggered_by character varying DEFAULT 'system'::character varying,
  duration_ms integer,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT repair_attempts_pkey PRIMARY KEY (id)
);
CREATE TABLE public.retrieval_sessions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id character varying,
  task_id character varying,
  query text NOT NULL,
  query_embedding USER-DEFINED,
  filters jsonb DEFAULT '{}'::jsonb,
  retrieved_records ARRAY DEFAULT '{}'::uuid[],
  relevance_scores ARRAY DEFAULT '{}'::double precision[],
  retrieval_time_ms integer,
  reranking_applied boolean DEFAULT false,
  selected_records ARRAY DEFAULT '{}'::uuid[],
  feedback_score double precision,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT retrieval_sessions_pkey PRIMARY KEY (id)
);
CREATE TABLE public.revenue_boosters (
  id integer NOT NULL DEFAULT nextval('revenue_boosters_id_seq'::regclass),
  name character varying NOT NULL,
  type character varying,
  trigger character varying,
  discount numeric,
  message text,
  conditions jsonb DEFAULT '{}'::jsonb,
  active boolean DEFAULT true,
  usage_count integer DEFAULT 0,
  revenue_generated numeric DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT revenue_boosters_pkey PRIMARY KEY (id)
);
CREATE TABLE public.revenue_tracking (
  id integer NOT NULL DEFAULT nextval('revenue_tracking_id_seq'::regclass),
  date date NOT NULL,
  revenue numeric DEFAULT 0,
  transactions integer DEFAULT 0,
  new_customers integer DEFAULT 0,
  recurring_revenue numeric DEFAULT 0,
  channel character varying,
  meta_data jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  customer_email character varying,
  customer_id character varying,
  product_name character varying,
  amount_cents bigint DEFAULT 0,
  CONSTRAINT revenue_tracking_pkey PRIMARY KEY (id)
);
CREATE TABLE public.revenue_transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  transaction_type character varying,
  amount numeric,
  customer_id uuid,
  job_id uuid,
  invoice_id uuid,
  payment_method character varying,
  stripe_payment_id character varying,
  status character varying,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT revenue_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT revenue_transactions_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT revenue_transactions_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id),
  CONSTRAINT revenue_transactions_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES public.invoices(id)
);
CREATE TABLE public.reviews (
  id uuid NOT NULL,
  product_id uuid NOT NULL,
  reviewer_id uuid NOT NULL,
  rating integer NOT NULL,
  title character varying,
  comment text,
  is_verified_purchase boolean,
  helpful_count integer,
  pros json,
  cons json,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT reviews_pkey PRIMARY KEY (id),
  CONSTRAINT reviews_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT reviews_reviewer_id_fkey FOREIGN KEY (reviewer_id) REFERENCES public.users(id)
);
CREATE TABLE public.roof_analyses (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  customer_email character varying,
  photo_data text,
  ai_analysis jsonb,
  confidence_score numeric,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT roof_analyses_pkey PRIMARY KEY (id)
);
CREATE TABLE public.roof_annotations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  roof_section_id uuid,
  geom USER-DEFINED NOT NULL,
  kind text CHECK (kind = ANY (ARRAY['defect'::text, 'repair_note'::text, 'measurement'::text, 'photo_pin'::text])),
  severity integer CHECK (severity >= 1 AND severity <= 5),
  note text,
  photo_url text,
  attrs jsonb DEFAULT '{}'::jsonb,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT roof_annotations_pkey PRIMARY KEY (id),
  CONSTRAINT roof_annotations_roof_section_id_fkey FOREIGN KEY (roof_section_id) REFERENCES public.roof_sections(id)
);
CREATE TABLE public.roof_assets (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  property_id uuid,
  name text,
  geom USER-DEFINED,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT roof_assets_pkey PRIMARY KEY (id),
  CONSTRAINT roof_assets_property_id_fkey FOREIGN KEY (property_id) REFERENCES public.properties(id)
);
CREATE TABLE public.roof_sections (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  roof_asset_id uuid,
  geom USER-DEFINED NOT NULL,
  label text,
  membrane_type text,
  slope_pct numeric,
  area_m2 numeric,
  perimeter_m numeric,
  status text DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'archived'::text, 'deleted'::text])),
  rev integer DEFAULT 1,
  attrs jsonb DEFAULT '{}'::jsonb,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT roof_sections_pkey PRIMARY KEY (id),
  CONSTRAINT roof_sections_roof_asset_id_fkey FOREIGN KEY (roof_asset_id) REFERENCES public.roof_assets(id)
);
CREATE TABLE public.sales_goals (
  id uuid NOT NULL,
  user_id uuid,
  team_id uuid,
  period_type character varying NOT NULL,
  period_start date NOT NULL,
  period_end date NOT NULL,
  revenue_target_cents integer NOT NULL,
  deals_target integer,
  activities_target integer,
  revenue_actual_cents integer,
  deals_actual integer,
  activities_actual integer,
  is_active boolean,
  created_by uuid NOT NULL,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT sales_goals_pkey PRIMARY KEY (id),
  CONSTRAINT sales_goals_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id),
  CONSTRAINT sales_goals_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT sales_goals_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.schedule_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  org_id uuid NOT NULL,
  event_type character varying NOT NULL,
  title character varying NOT NULL,
  description text,
  job_id uuid,
  customer_id uuid,
  start_time timestamp without time zone NOT NULL,
  end_time timestamp without time zone NOT NULL,
  duration_minutes integer,
  is_ai_optimized boolean DEFAULT false,
  optimization_score real,
  alternative_slots jsonb,
  conflict_analysis jsonb,
  assigned_employees jsonb,
  required_equipment jsonb,
  location text,
  travel_time_minutes integer,
  status character varying DEFAULT 'scheduled'::character varying,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  organization_id uuid DEFAULT '00000000-0000-0000-0000-000000000001'::uuid,
  assigned_to ARRAY,
  CONSTRAINT schedule_events_pkey PRIMARY KEY (id),
  CONSTRAINT schedule_events_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT schedule_events_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id)
);
CREATE TABLE public.security_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_type character varying NOT NULL,
  user_id uuid,
  ip_address character varying,
  request_path character varying,
  details jsonb,
  severity character varying DEFAULT 'low'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  resolved boolean DEFAULT false,
  resolved_at timestamp with time zone,
  resolved_by uuid,
  notes text,
  CONSTRAINT security_events_pkey PRIMARY KEY (id)
);
CREATE TABLE public.service_jobs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  job_id uuid,
  service_type character varying,
  scheduled_date date,
  completed_date date,
  technician_id uuid,
  labor_hours numeric,
  materials_cost_cents bigint,
  labor_cost_cents bigint,
  status character varying,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT service_jobs_pkey PRIMARY KEY (id),
  CONSTRAINT service_jobs_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id)
);
CREATE TABLE public.service_tickets (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  ticket_id uuid DEFAULT gen_random_uuid(),
  customer_id uuid,
  status character varying DEFAULT 'open'::character varying,
  priority character varying DEFAULT 'normal'::character varying,
  resolved_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT service_tickets_pkey PRIMARY KEY (id)
);
CREATE TABLE public.sessions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  token character varying NOT NULL UNIQUE,
  expires_at timestamp with time zone NOT NULL,
  is_active boolean DEFAULT true,
  ip_address character varying,
  user_agent text,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT sessions_pkey PRIMARY KEY (id),
  CONSTRAINT sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.shopping_carts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  session_id character varying,
  status character varying DEFAULT 'active'::character varying,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  expires_at timestamp without time zone DEFAULT (now() + '7 days'::interval),
  CONSTRAINT shopping_carts_pkey PRIMARY KEY (id)
);
CREATE TABLE public.spatial_ref_sys (
  srid integer NOT NULL CHECK (srid > 0 AND srid <= 998999),
  auth_name character varying,
  auth_srid integer,
  srtext character varying,
  proj4text character varying,
  CONSTRAINT spatial_ref_sys_pkey PRIMARY KEY (srid)
);
CREATE TABLE public.subscriber_segments (
  id integer NOT NULL DEFAULT nextval('subscriber_segments_id_seq'::regclass),
  name character varying NOT NULL UNIQUE,
  description text,
  criteria jsonb DEFAULT '{}'::jsonb,
  active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT subscriber_segments_pkey PRIMARY KEY (id)
);
CREATE TABLE public.subscription_history (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  stripe_subscription_id text,
  stripe_invoice_id text,
  tier text NOT NULL,
  amount numeric,
  currency text DEFAULT 'usd'::text,
  period_start timestamp with time zone,
  period_end timestamp with time zone,
  status text,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT subscription_history_pkey PRIMARY KEY (id),
  CONSTRAINT subscription_history_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.subscriptions (
  id uuid NOT NULL,
  user_id uuid NOT NULL UNIQUE,
  tier character varying,
  status character varying,
  stripe_customer_id character varying,
  stripe_subscription_id character varying,
  monthly_ai_requests integer,
  used_ai_requests integer,
  storage_limit_gb double precision,
  used_storage_gb double precision,
  monthly_budget double precision,
  current_period_start timestamp without time zone,
  current_period_end timestamp without time zone,
  canceled_at timestamp without time zone,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT subscriptions_pkey PRIMARY KEY (id),
  CONSTRAINT subscriptions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.summarizations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  source_type character varying NOT NULL,
  source_id uuid NOT NULL,
  summary_type character varying NOT NULL,
  summary_text text NOT NULL,
  summary_metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT summarizations_pkey PRIMARY KEY (id)
);
CREATE TABLE public.supplier_products (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  supplier_id uuid,
  name character varying NOT NULL,
  sku character varying NOT NULL,
  category character varying NOT NULL,
  unit character varying NOT NULL,
  price numeric NOT NULL,
  min_order integer DEFAULT 1,
  availability character varying DEFAULT 'in_stock'::character varying,
  lead_time integer DEFAULT 0,
  description text,
  image_url text,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT supplier_products_pkey PRIMARY KEY (id),
  CONSTRAINT supplier_products_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES public.suppliers(id)
);
CREATE TABLE public.suppliers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  contact_email character varying,
  contact_phone character varying,
  address text,
  website character varying,
  api_endpoint character varying,
  api_key character varying,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT suppliers_pkey PRIMARY KEY (id)
);
CREATE TABLE public.sync_queue (
  external_id bigint NOT NULL,
  priority integer DEFAULT 0,
  attempts integer DEFAULT 0,
  scheduled_at timestamp with time zone DEFAULT now(),
  processing boolean DEFAULT false,
  CONSTRAINT sync_queue_pkey PRIMARY KEY (external_id)
);
CREATE TABLE public.sync_runs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  started_at timestamp with time zone DEFAULT now(),
  finished_at timestamp with time zone,
  entity_counts jsonb DEFAULT '{}'::jsonb,
  errors jsonb DEFAULT '[]'::jsonb,
  status text DEFAULT 'running'::text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sync_runs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.system_audits (
  id integer NOT NULL DEFAULT nextval('system_audits_id_seq'::regclass),
  audit_date timestamp without time zone DEFAULT now(),
  total_tables integer,
  total_files integer,
  deployed_endpoints integer,
  potential_endpoints integer,
  completion_percentage integer,
  deployment_percentage integer,
  findings text,
  metadata jsonb,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT system_audits_pkey PRIMARY KEY (id)
);
CREATE TABLE public.system_config (
  key character varying NOT NULL,
  value json NOT NULL,
  description text,
  config_type character varying,
  is_secret boolean,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_by character varying,
  CONSTRAINT system_config_pkey PRIMARY KEY (key)
);
CREATE TABLE public.system_context (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  context_type text NOT NULL,
  context_data jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  component_name text,
  component_version text,
  deployment_status text DEFAULT 'pending'::text,
  health_status jsonb DEFAULT '{"status": "healthy", "last_check": null}'::jsonb,
  fallback_rules jsonb DEFAULT '[]'::jsonb,
  CONSTRAINT system_context_pkey PRIMARY KEY (id)
);
CREATE TABLE public.system_decisions (
  id integer NOT NULL DEFAULT nextval('system_decisions_id_seq'::regclass),
  context text NOT NULL,
  options jsonb NOT NULL,
  selected_option text,
  confidence double precision DEFAULT 0.5,
  reasoning text,
  outcome character varying,
  feedback text,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT system_decisions_pkey PRIMARY KEY (id)
);
CREATE TABLE public.system_events (
  event_id character varying NOT NULL,
  event_type character varying NOT NULL,
  source_agent character varying,
  target_agents ARRAY,
  payload jsonb,
  priority integer DEFAULT 1,
  requires_acknowledgment boolean DEFAULT false,
  acknowledged_by ARRAY,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT system_events_pkey PRIMARY KEY (event_id)
);
CREATE TABLE public.system_learning_log (
  id integer NOT NULL DEFAULT nextval('system_learning_log_id_seq'::regclass),
  agent_name text,
  agent_id text NOT NULL,
  task_type text NOT NULL,
  task_input jsonb NOT NULL,
  task_output jsonb,
  execution_time_ms double precision,
  success boolean DEFAULT false,
  error_message text,
  tokens_used integer DEFAULT 0,
  model_name text,
  memory_keys ARRAY,
  learning_insights jsonb DEFAULT '{}'::jsonb,
  performance_metrics jsonb DEFAULT '{}'::jsonb,
  user_id text DEFAULT 'system'::text,
  session_id text,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  learning_type text,
  source_project text,
  discovery text,
  impact_score double precision,
  applied_to_projects ARRAY,
  metadata jsonb,
  agent text,
  CONSTRAINT system_learning_log_pkey PRIMARY KEY (id)
);
CREATE TABLE public.system_logs (
  id integer NOT NULL DEFAULT nextval('system_logs_id_seq'::regclass),
  timestamp timestamp with time zone DEFAULT now(),
  source character varying,
  level character varying,
  message text,
  metadata jsonb,
  CONSTRAINT system_logs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.system_metrics (
  id integer NOT NULL DEFAULT nextval('system_metrics_id_seq'::regclass),
  metric_type character varying NOT NULL,
  metric_value double precision NOT NULL,
  metric_data jsonb DEFAULT '{}'::jsonb,
  timestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT system_metrics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.system_secrets (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  secret_name character varying NOT NULL UNIQUE,
  secret_type character varying NOT NULL,
  encrypted_value text NOT NULL,
  encryption_method character varying DEFAULT 'aes256'::character varying,
  service_name character varying NOT NULL,
  service_type character varying NOT NULL,
  is_active boolean DEFAULT true,
  expires_at timestamp with time zone,
  last_rotated_at timestamp with time zone,
  last_used_at timestamp with time zone,
  created_by uuid,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT system_secrets_pkey PRIMARY KEY (id)
);
CREATE TABLE public.system_settings (
  id integer NOT NULL DEFAULT nextval('system_settings_id_seq'::regclass),
  key character varying NOT NULL UNIQUE,
  value text,
  description text,
  updated_at timestamp with time zone DEFAULT now(),
  updated_by character varying,
  CONSTRAINT system_settings_pkey PRIMARY KEY (id)
);
CREATE TABLE public.task_comments (
  id uuid NOT NULL,
  task_id uuid NOT NULL,
  user_id uuid NOT NULL,
  content text NOT NULL,
  attachments json,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT task_comments_pkey PRIMARY KEY (id),
  CONSTRAINT task_comments_task_id_fkey FOREIGN KEY (task_id) REFERENCES public.project_tasks(id),
  CONSTRAINT task_comments_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.task_dependencies (
  id uuid NOT NULL,
  task_id uuid NOT NULL,
  predecessor_id uuid NOT NULL,
  dependency_type character varying,
  lag_hours double precision,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT task_dependencies_pkey PRIMARY KEY (id),
  CONSTRAINT task_dependencies_task_id_fkey FOREIGN KEY (task_id) REFERENCES public.project_tasks(id),
  CONSTRAINT task_dependencies_predecessor_id_fkey FOREIGN KEY (predecessor_id) REFERENCES public.project_tasks(id)
);
CREATE TABLE public.task_executions (
  id uuid NOT NULL,
  task_id character varying NOT NULL,
  status character varying NOT NULL,
  parameters json,
  result json,
  error_message text,
  triggered_by character varying,
  trigger_source character varying,
  execution_time_ms integer,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  started_at timestamp without time zone,
  completed_at timestamp without time zone,
  CONSTRAINT task_executions_pkey PRIMARY KEY (id)
);
CREATE TABLE public.task_history (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  task_id uuid,
  action character varying,
  details jsonb,
  performed_by character varying,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT task_history_pkey PRIMARY KEY (id),
  CONSTRAINT task_history_task_id_fkey FOREIGN KEY (task_id) REFERENCES public.ai_tasks(id)
);
CREATE TABLE public.task_queue (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  agent character varying NOT NULL,
  task jsonb NOT NULL,
  priority integer DEFAULT 5,
  status character varying DEFAULT 'pending'::character varying,
  submitted_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  started_at timestamp without time zone,
  completed_at timestamp without time zone,
  result jsonb,
  error_message text,
  retry_count integer DEFAULT 0,
  max_retries integer DEFAULT 3,
  CONSTRAINT task_queue_pkey PRIMARY KEY (id)
);
CREATE TABLE public.tasks (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  title character varying NOT NULL,
  description text,
  assigned_to uuid,
  related_to_type character varying,
  related_to_id uuid,
  due_date timestamp with time zone,
  priority integer DEFAULT 3,
  status character varying DEFAULT 'pending'::character varying,
  completed_at timestamp with time zone,
  created_by uuid,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT tasks_pkey PRIMARY KEY (id),
  CONSTRAINT tasks_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.app_users(id),
  CONSTRAINT tasks_assigned_to_fkey FOREIGN KEY (assigned_to) REFERENCES public.app_users(id)
);
CREATE TABLE public.team_members (
  team_id uuid,
  user_id uuid,
  role character varying,
  joined_at timestamp without time zone,
  id integer NOT NULL DEFAULT nextval('team_members_id_seq'::regclass),
  CONSTRAINT team_members_pkey PRIMARY KEY (id),
  CONSTRAINT team_members_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id),
  CONSTRAINT team_members_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.teams (
  id uuid NOT NULL,
  name character varying NOT NULL,
  slug character varying NOT NULL,
  description text,
  logo_url character varying,
  website character varying,
  max_members integer,
  owner_id uuid NOT NULL,
  is_active boolean,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT teams_pkey PRIMARY KEY (id),
  CONSTRAINT teams_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES public.users(id)
);
CREATE TABLE public.usage_records (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  user_id uuid,
  resource_type text NOT NULL,
  quantity integer NOT NULL,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT usage_records_pkey PRIMARY KEY (id),
  CONSTRAINT usage_records_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id),
  CONSTRAINT usage_records_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.user_activities (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  activity_type character varying NOT NULL,
  description text,
  metadata jsonb,
  ip_address character varying,
  user_agent text,
  timestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT user_activities_pkey PRIMARY KEY (id),
  CONSTRAINT fk_user_activities_user FOREIGN KEY (user_id) REFERENCES public.app_users(id)
);
CREATE TABLE public.user_api_keys (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  name character varying NOT NULL,
  key_hash character varying NOT NULL,
  key_prefix character varying NOT NULL,
  scopes jsonb DEFAULT '[]'::jsonb,
  last_used_at timestamp without time zone,
  usage_count integer DEFAULT 0,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  expires_at timestamp without time zone,
  is_active boolean DEFAULT true,
  CONSTRAINT user_api_keys_pkey PRIMARY KEY (id),
  CONSTRAINT fk_user_api_keys_user FOREIGN KEY (user_id) REFERENCES public.app_users(id)
);
CREATE TABLE public.user_credits (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL UNIQUE,
  credits_available integer DEFAULT 0,
  credits_used integer DEFAULT 0,
  credits_total integer DEFAULT 0,
  subscription_credits_monthly integer DEFAULT 0,
  next_credit_refresh timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_credits_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  type character varying NOT NULL,
  category character varying NOT NULL,
  title character varying NOT NULL,
  message text NOT NULL,
  data jsonb,
  action_url character varying,
  is_read boolean DEFAULT false,
  read_at timestamp without time zone,
  is_archived boolean DEFAULT false,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT user_notifications_pkey PRIMARY KEY (id),
  CONSTRAINT fk_user_notifications_user FOREIGN KEY (user_id) REFERENCES public.app_users(id)
);
CREATE TABLE public.user_profiles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL UNIQUE,
  bio text,
  avatar_url character varying,
  phone_number character varying,
  timezone character varying DEFAULT 'UTC'::character varying,
  language character varying DEFAULT 'en'::character varying,
  preferences jsonb DEFAULT '{}'::jsonb,
  notification_settings jsonb DEFAULT '{}'::jsonb,
  company character varying,
  job_title character varying,
  linkedin_url character varying,
  website_url character varying,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT user_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT fk_user_profiles_user FOREIGN KEY (user_id) REFERENCES public.app_users(id)
);
CREATE TABLE public.user_sessions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  refresh_token_hash character varying NOT NULL UNIQUE,
  ip_address character varying,
  user_agent character varying,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  last_activity timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  expires_at timestamp without time zone NOT NULL,
  revoked_at timestamp with time zone,
  CONSTRAINT user_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT user_sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.app_users(id)
);
CREATE TABLE public.user_tasks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  title character varying NOT NULL,
  description text,
  status character varying DEFAULT 'pending'::character varying,
  task_type character varying,
  parameters jsonb DEFAULT '{}'::jsonb,
  result jsonb,
  error text,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  completed_at timestamp without time zone,
  CONSTRAINT user_tasks_pkey PRIMARY KEY (id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  email text NOT NULL UNIQUE,
  password_hash text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT users_pkey PRIMARY KEY (id)
);
CREATE TABLE public.vector_memories (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  collection_id uuid,
  content text NOT NULL,
  embedding USER-DEFINED,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT vector_memories_pkey PRIMARY KEY (id)
);
CREATE TABLE public.vendors (
  id uuid NOT NULL,
  name character varying NOT NULL,
  email character varying,
  phone character varying,
  website character varying,
  address text,
  city character varying,
  state character varying,
  zip_code character varying,
  country character varying,
  tax_id character varying,
  payment_terms character varying,
  account_number character varying,
  categories json,
  preferred boolean,
  is_active boolean,
  notes text,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT vendors_pkey PRIMARY KEY (id)
);
CREATE TABLE public.webhook_events (
  id uuid NOT NULL,
  source character varying NOT NULL,
  event_type character varying NOT NULL,
  headers json,
  payload json NOT NULL,
  signature character varying,
  processed boolean,
  processing_result json,
  error_message text,
  received_at timestamp without time zone NOT NULL,
  processed_at timestamp without time zone,
  task_execution_id uuid,
  CONSTRAINT webhook_events_pkey PRIMARY KEY (id),
  CONSTRAINT webhook_events_task_execution_id_fkey FOREIGN KEY (task_execution_id) REFERENCES public.task_executions(id)
);
CREATE TABLE public.webhooks (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  url text NOT NULL,
  secret character varying,
  events ARRAY,
  is_active boolean DEFAULT true,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT webhooks_pkey PRIMARY KEY (id)
);
CREATE TABLE public.workflow_definitions (
  workflow_id character varying NOT NULL,
  name character varying NOT NULL,
  description text,
  workflow_type character varying NOT NULL,
  definition jsonb NOT NULL,
  created_by character varying,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  is_active boolean DEFAULT true,
  CONSTRAINT workflow_definitions_pkey PRIMARY KEY (workflow_id)
);
CREATE TABLE public.workflow_executions (
  execution_id character varying NOT NULL,
  workflow_id character varying NOT NULL,
  workflow_name character varying,
  user_id character varying,
  status character varying NOT NULL,
  input_data jsonb,
  results jsonb,
  errors jsonb DEFAULT '[]'::jsonb,
  metrics jsonb DEFAULT '{}'::jsonb,
  agent_contributions jsonb DEFAULT '{}'::jsonb,
  started_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  completed_at timestamp without time zone,
  execution_time_seconds double precision,
  CONSTRAINT workflow_executions_pkey PRIMARY KEY (execution_id)
);
CREATE TABLE public.workflow_runs (
  id uuid NOT NULL,
  workflow_id uuid NOT NULL,
  status character varying,
  trigger_data json,
  steps_completed integer,
  steps_total integer NOT NULL,
  output json,
  error text,
  logs json,
  parent_run_id uuid,
  started_at timestamp without time zone NOT NULL,
  completed_at timestamp without time zone,
  duration_ms integer,
  CONSTRAINT workflow_runs_pkey PRIMARY KEY (id),
  CONSTRAINT workflow_runs_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflows(id),
  CONSTRAINT workflow_runs_parent_run_id_fkey FOREIGN KEY (parent_run_id) REFERENCES public.workflow_runs(id)
);
CREATE TABLE public.workflows (
  id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  trigger_type character varying NOT NULL,
  trigger_config json NOT NULL,
  steps json NOT NULL,
  owner_id uuid NOT NULL,
  team_id uuid,
  is_active boolean,
  is_public boolean,
  tags json,
  meta_data json,
  version integer DEFAULT 1,
  run_count integer,
  success_count integer,
  last_run_at timestamp without time zone,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT workflows_pkey PRIMARY KEY (id),
  CONSTRAINT workflows_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id),
  CONSTRAINT workflows_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES public.users(id)
);
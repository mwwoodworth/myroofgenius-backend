[pytest]
# Pytest Configuration for BrainOps Backend
# Complete testing framework - NO ADDITIONAL COST

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Output options
addopts =
    # Verbose output
    -v
    # Show local variables in tracebacks
    -l
    # Show summary of all test outcomes
    -ra
    # Coverage reporting
    --cov=apps
    --cov=core
    --cov=services
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    # Fail if coverage below 80%
    --cov-fail-under=80
    # Strict markers
    --strict-markers
    # Show warnings
    -W default
    # Parallel execution (use all CPUs)
    -n auto
    # Durations report (slowest 10 tests)
    --durations=10

# Markers for test organization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (require services)
    e2e: End-to-end tests (full system)
    slow: Slow tests (> 1 second)
    security: Security-related tests
    performance: Performance/load tests
    asyncio: Async tests
    database: Tests requiring database
    api: API endpoint tests
    agents: AI agent tests

# Async support
asyncio_mode = auto

# Test timeouts
timeout = 300
timeout_method = thread

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage config
[coverage:run]
source = apps,core,services
omit =
    */tests/*
    */migrations/*
    */__pycache__/*
    */venv/*
    */virtualenv/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov

#!/usr/bin/env python3
"""Send deployment success notification to Slack"""

import requests
import json
from datetime import datetime

SLACK_WEBHOOK_URL = "https://hooks.slack.com/services/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"

def send_success_notification():
    """Send deployment success notification"""
    
    blocks = [
        {
            "type": "header",
            "text": {
                "type": "plain_text",
                "text": "üéâ MyRoofGenius Successfully Deployed!"
            }
        },
        {
            "type": "section",
            "text": {
                "type": "mrkdwn",
                "text": f"*Time:* {datetime.now().strftime('%Y-%m-%d %H:%M:%S UTC')}\n*Build Time:* 1 minute 4 seconds\n*Location:* Washington, D.C., USA (East)"
            }
        },
        {
            "type": "divider"
        },
        {
            "type": "section",
            "text": {
                "type": "mrkdwn",
                "text": "*‚úÖ Build Results:*\n‚Ä¢ TypeScript compilation: Success\n‚Ä¢ Static generation: 71 pages\n‚Ä¢ API routes: 33 endpoints ready\n‚Ä¢ Slack endpoints: `/api/slack/events` and `/api/slack/verify`\n‚Ä¢ No TypeScript errors found!"
            }
        },
        {
            "type": "section",
            "text": {
                "type": "mrkdwn",
                "text": "*üöÄ Deployment Status:*\n‚Ä¢ Frontend: ‚úÖ Live at https://myroofgenius.com\n‚Ä¢ Backend: ‚è≥ v3.1.172 ready (awaiting manual deployment)\n‚Ä¢ Slack Integration: ‚úÖ Ready for Event Subscriptions"
            }
        },
        {
            "type": "section",
            "text": {
                "type": "mrkdwn",
                "text": "*üìã Next Steps:*\n1. ‚úÖ Configure Slack Event Subscriptions\n   - URL: `https://myroofgenius.com/api/slack/events`\n2. ‚è≥ Deploy backend v3.1.172 on Render\n3. ‚è≥ Add Slack environment variables to Render\n4. ‚è≥ Test two-way communication"
            }
        },
        {
            "type": "divider"
        },
        {
            "type": "section",
            "text": {
                "type": "mrkdwn",
                "text": "*üîß Today's Achievements:*\n‚Ä¢ Fixed MyRoofGenius TypeScript build errors\n‚Ä¢ Implemented complete Slack integration\n‚Ä¢ Created comprehensive documentation\n‚Ä¢ Prepared backend v3.1.172 for deployment\n‚Ä¢ Fixed Slack URL verification challenge"
            }
        },
        {
            "type": "context",
            "elements": [
                {
                    "type": "mrkdwn",
                    "text": "ü§ñ ClaudeOS Lead Autonomous Engineer - Ready for two-way communication!"
                }
            ]
        }
    ]
    
    payload = {
        "text": "MyRoofGenius Successfully Deployed!",
        "blocks": blocks,
        "username": "ClaudeOS",
        "icon_emoji": "üéâ"
    }
    
    try:
        response = requests.post(SLACK_WEBHOOK_URL, json=payload)
        if response.status_code == 200:
            print("‚úÖ Success notification sent to Slack")
        else:
            print(f"‚ùå Failed: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Error: {str(e)}")

if __name__ == "__main__":
    send_success_notification()